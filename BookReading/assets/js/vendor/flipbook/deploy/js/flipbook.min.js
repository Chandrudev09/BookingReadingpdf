var FLIPBOOK = FLIPBOOK || {};
!(function (e, t, o, i) {
  (e.fn.flipBook = function (e) {
    return new FLIPBOOK.Main(e, this);
  }),
    (e.fn.swipeBook = function (e) {
      return (e.viewMode = "swipe"), new FLIPBOOK.Main(e, this);
    }),
    (e.fn.flipBook.options = {
      name: "",
      pages: [],
      tableOfContent: [],
      tableOfContentCloseOnClick: !0,
      thumbsCloseOnClick: !0,
      deeplinkingEnabled: !1,
      deeplinkingPrefix: "",
      assets: {
        preloader: "images/preloader.jpg",
        overlay: "images/overlay.png",
        flipMp3: "mp3/turnPage.mp3",
        spinner: "images/spinner.gif",
      },
      pdfUrl: null,
      pdfBrowserViewerIfMobile: !1,
      pdfBrowserViewerIfIE: !1,
      pdfBrowserViewerFullscreen: !0,
      pdfBrowserViewerFullscreenTarget: "_blank",
      pdfPageScale: 1,
      pdfOutline: !0,
      rangeChunkSize: 64,
      htmlLayer: !0,
      rightToLeft: !1,
      startPage: 0,
      sound: !0,
      backgroundColor: "rgb(81, 85, 88)",
      backgroundImage: "",
      backgroundPattern: "",
      backgroundTransparent: !1,
      thumbSize: 130,
      loadAllPages: !1,
      loadPagesF: 2,
      loadPagesB: 1,
      autoplayOnStart: !1,
      autoplayInterval: 3e3,
      autoplayLoop: !0,
      skin: "light",
      layout: "1",
      menuOverBook: !1,
      menuFloating: !1,
      menuBackground: "",
      menuShadow: "",
      menuMargin: 0,
      menuPadding: 0,
      menuTransparent: !1,
      menu2OverBook: !0,
      menu2Floating: !1,
      menu2Background: "",
      menu2Shadow: "",
      menu2Margin: 0,
      menu2Padding: 0,
      menu2Transparent: !0,
      skinColor: "",
      skinBackground: "",
      btnColor: "",
      btnBackground: "none",
      btnSize: 14,
      btnRadius: 2,
      btnMargin: 2,
      btnShadow: "",
      btnTextShadow: "",
      btnBorder: "",
      btnColorHover: "",
      btnBackgroundHover: "",
      sideBtnColor: "#FFF",
      sideBtnBackground: "#00000033",
      sideBtnSize: 30,
      sideBtnRadius: 0,
      sideBtnMargin: 0,
      sideBtnPaddingV: 5,
      sideBtnPaddingH: 0,
      sideBtnShadow: "",
      sideBtnTextShadow: "",
      sideBtnBorder: "",
      sideBtnColorHover: "#FFF",
      sideBtnBackgroundHover: "#00000066",
      floatingBtnColor: "#EEE",
      floatingBtnBackground: "#00000044",
      floatingBtnSize: null,
      floatingBtnRadius: null,
      floatingBtnMargin: null,
      floatingBtnShadow: "",
      floatingBtnTextShadow: "",
      floatingBtnBorder: "",
      floatingBtnColorHover: "",
      floatingBtnBackgroundHover: "",
      btnOrder: [
        "currentPage",
        "btnFirst",
        "btnPrev",
        "btnNext",
        "btnLast",
        "btnZoomIn",
        "btnZoomOut",
        "btnRotateLeft",
        "btnRotateRight",
        "btnAutoplay",
        "btnSearch",
        "btnSelect",
        "btnBookmark",
        "btnToc",
        "btnThumbs",
        "btnShare",
        "btnPrint",
        "btnDownloadPages",
        "btnDownloadPdf",
        "btnSound",
        "btnExpand",
        "btnClose",
      ],
      currentPage: {
        enabled: !0,
        title: "Current page",
        vAlign: "top",
        hAlign: "left",
        marginH: 0,
        marginV: 0,
        color: "",
        background: "",
      },
      btnFirst: {
        enabled: !1,
        title: "First page",
        icon: "fa-angle-double-left",
        icon2: "first_page",
      },
      btnPrev: {
        enabled: !0,
        title: "Previous page",
        icon: "fa-angle-left",
        icon2: "chevron_left",
      },
      btnNext: {
        enabled: !0,
        title: "Next page",
        icon: "fa-angle-right",
        icon2: "chevron_right",
      },
      btnLast: {
        enabled: !1,
        title: "Last page",
        icon: "fa-angle-double-right",
        icon2: "last_page",
      },
      btnZoomIn: {
        enabled: !0,
        title: "Zoom in",
        icon: "fa-plus",
        icon2: "zoom_in",
      },
      btnZoomOut: {
        enabled: !0,
        title: "Zoom out",
        icon: "fa-minus",
        icon2: "zoom_out",
      },
      btnRotateLeft: { enabled: !1, title: "Rotate left", icon: "fas fa-undo" },
      btnRotateRight: {
        enabled: !1,
        title: "Rotate right",
        icon: "fas fa-redo",
      },
      btnAutoplay: {
        enabled: !0,
        title: "Autoplay",
        icon: "fa-play",
        icon2: "play_arrow",
        iconAlt: "fa-pause",
        iconAlt2: "pause",
      },
      btnSearch: {
        enabled: !1,
        title: "Search",
        icon: "fas fa-search",
        icon2: "search",
      },
      btnSelect: {
        enabled: !0,
        title: "Select tool",
        icon: "fas fa-i-cursor",
        icon2: "text_format",
      },
      btnBookmark: {
        enabled: !0,
        title: "Bookmark",
        icon: "fas fa-bookmark",
        icon2: "bookmark",
      },
      btnToc: {
        enabled: !0,
        title: "Table of Contents",
        icon: "fa-list-ol",
        icon2: "toc",
      },
      btnThumbs: {
        enabled: !0,
        title: "Pages",
        icon: "fa-th-large",
        icon2: "view_module",
      },
      btnShare: {
        enabled: !0,
        title: "Share",
        icon: "fa-link",
        icon2: "share",
        hideOnMobile: !0,
      },
      btnPrint: {
        enabled: !0,
        title: "Print",
        icon: "fa-print",
        icon2: "print",
        hideOnMobile: !0,
      },
      btnDownloadPages: {
        enabled: !0,
        title: "Download pages",
        icon: "fa-download",
        icon2: "file_download",
        url: "images/pages.zip",
        name: "allPages.zip",
      },
      btnDownloadPdf: {
        forceDownload: !1,
        enabled: !0,
        title: "Download PDF",
        icon: "fa-file",
        icon2: "picture_as_pdf",
        url: null,
        openInNewWindow: !0,
        name: "allPages.pdf",
      },
      btnSound: {
        enabled: !0,
        title: "Volume",
        icon: "fa-volume-up",
        iconAlt: "fa-volume-off",
        icon2: "volume_up",
        iconAlt2: "volume_mute",
        hideOnMobile: !0,
      },
      btnExpand: {
        enabled: !0,
        title: "Toggle fullscreen",
        icon: "fa-expand",
        icon2: "fullscreen",
        iconAlt: "fa-compress",
        iconAlt2: "fullscreen_exit",
      },
      btnClose: {
        title: "Close",
        icon: "fa-times",
        icon2: "close",
        hAlign: "right",
        vAlign: "top",
        size: 20,
      },
      btnShareIfMobile: !1,
      btnSoundIfMobile: !1,
      btnPrintIfMobile: !1,
      sideNavigationButtons: !0,
      hideMenu: !1,
      twitter: { enabled: !0, url: null, description: null },
      facebook: {
        enabled: !0,
        load_sdk: !0,
        url: null,
        app_id: null,
        title: null,
        caption: null,
        description: null,
        image: null,
      },
      pinterest: { enabled: !0, url: null, image: null, description: null },
      email: { enabled: !0, title: null, description: null, url: null },
      pdf: { annotationLayer: !1 },
      pageTextureSize: 2048,
      pageTextureSizeSmall: 1500,
      pageTextureSizeMobile: null,
      pageTextureSizeMobileSmall: 1024,
      viewMode: "webgl",
      singlePageMode: !1,
      singlePageModeIfMobile: !1,
      zoomMin: 0.95,
      zoomMax2: null,
      zoomSize: null,
      zoomStep: 2,
      zoomTime: 300,
      zoomReset: !1,
      zoomResetTime: 300,
      wheelDisabledNotFullscreen: !1,
      arrowsDisabledNotFullscreen: !1,
      arrowsAlwaysEnabledForNavigation: !1,
      touchSwipeEnabled: !0,
      responsiveView: !0,
      responsiveViewTreshold: 768,
      minPixelRatio: 1,
      pageFlipDuration: 1,
      contentOnStart: !1,
      thumbnailsOnStart: !1,
      searchOnStart: !1,
      sideMenuOverBook: !0,
      sideMenuOverMenu: !1,
      sideMenuOverMenu2: !0,
      sideMenuPosition: "left",
      lightBox: !1,
      lightBoxOpened: !1,
      lightBoxFullscreen: !1,
      lightboxCloseOnClick: !1,
      lightboxResetOnOpen: !0,
      lightboxBackground: null,
      lightboxBackgroundColor: null,
      lightboxBackgroundPattern: null,
      lightboxBackgroundImage: null,
      lightboxStartPage: null,
      lightboxMarginV: "0",
      lightboxMarginH: "0",
      lightboxCSS: "",
      lightboxPreload: !1,
      lightboxShowMenu: !1,
      lightboxCloseOnBack: !0,
      disableImageResize: !0,
      pan: 0,
      panMax: 10,
      panMax2: 2,
      panMin: -10,
      panMin2: -2,
      tilt: 0,
      tiltMax: 0,
      tiltMax2: 0,
      tiltMin: -20,
      tiltMin2: -5,
      rotateCameraOnMouseMove: !1,
      rotateCameraOnMouseDrag: !0,
      lights: !0,
      lightColor: 16777215,
      lightPositionX: 0,
      lightPositionZ: 1400,
      lightPositionY: 350,
      lightIntensity: 0.6,
      shadows: !0,
      shadowMapSize: 1024,
      shadowOpacity: 0.2,
      shadowDistance: 15,
      pageRoughness: 1,
      pageMetalness: 0,
      pageHardness: 2,
      coverHardness: 2,
      pageSegmentsW: 5,
      pageSegmentsH: 1,
      pageMiddleShadowSize: 2,
      pageMiddleShadowColorL: "#999999",
      pageMiddleShadowColorR: "#777777",
      antialias: !1,
      preloaderText: "",
      fillPreloader: {
        enabled: !1,
        imgEmpty: "images/logo_light.png",
        imgFull: "images/logo_dark.png",
      },
      logoImg: "",
      logoUrl: "",
      logoCSS: "position:absolute;",
      logoHideOnMobile: !1,
      printMenu: !0,
      downloadMenu: !0,
      cover: !0,
      backCover: !0,
      textLayer: !0,
      googleAnalyticsTrackingCode: null,
      minimumAndroidVersion: 6,
      linkColor: "rgba(255, 255, 0, .05)",
      linkColorHover: "rgba(255, 255, 0, .2)",
      rightClickEnabled: !0,
      strings: {
        print: "Print",
        printLeftPage: "Print left page",
        printRightPage: "Print right page",
        printCurrentPage: "Print current page",
        printAllPages: "Print all pages",
        download: "Download",
        downloadLeftPage: "Download left page",
        downloadRightPage: "Download right page",
        downloadCurrentPage: "Download current page",
        downloadAllPages: "Download all pages",
        bookmarks: "Bookmarks",
        bookmarkLeftPage: "Bookmark left page",
        bookmarkRightPage: "Bookmark right page",
        bookmarkCurrentPage: "Bookmark current page",
        search: "Search",
        findInDocument: "Find in document",
        pagesFoundContaining: "pages found containing",
        thumbnails: "Thumbnails",
        tableOfContent: "Table of Contents",
        share: "Share",
        pressEscToClose: "Press ESC to close",
        password: "Password",
      },
      mobile: { shadows: !1 },
    }),
    (FLIPBOOK.Main = function (i, n) {
      var s = this;
      (this.elem = n),
        (this.$elem = e(n)),
        (this.$body = e("body")),
        (this.body = this.$body[0]),
        (this.$window = e(t)),
        (this.bodyHasVerticalScrollbar = function () {
          return s.body.scrollHeight > t.innerHeight;
        }),
        (this.isZoomed = function () {
          return s.zoom > 1;
        }),
        (this.options = {});
      var a,
        r = o.createElement("div").style,
        l = (function () {
          for (
            var e = "t,webkitT,MozT,msT,OT".split(","), t = 0, o = e.length;
            t < o;
            t++
          )
            if (e[t] + "ransform" in r) return e[t].substr(0, e[t].length - 1);
          return !1;
        })(),
        d = /android/gi.test(navigator.appVersion),
        h =
          (/iphone|ipad/gi.test(navigator.appVersion),
          (a = "perspective"),
          ("" === l
            ? a
            : ((a = a.charAt(0).toUpperCase() + a.substr(1)), l + a)) in r);
      (this.msie = t.navigator.userAgent.indexOf("MSIE ")),
        (this.isAndroid = d),
        (this.has3d = h),
        void 0 === FLIPBOOK.hasWebGl &&
          (function (e) {
            if (t.WebGLRenderingContext) {
              for (
                var i = o.createElement("canvas"),
                  n = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"],
                  s = !1,
                  a = 0;
                a < 4;
                a++
              )
                try {
                  if (
                    (s = i.getContext(n[a])) &&
                    "function" == typeof s.getParameter
                  )
                    return e
                      ? { name: n[a], gl: s }
                      : ((FLIPBOOK.hasWebGl = !0), !0);
                } catch (e) {}
              return (FLIPBOOK.hasWebGl = !1), !1;
            }
            FLIPBOOK.hasWebGl = !1;
          })(),
        (this.hasWebGl = FLIPBOOK.hasWebGl),
        (function () {
          var e = -1;
          if ("Microsoft Internet Explorer" == navigator.appName) {
            var t = navigator.userAgent;
            null != new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})").exec(t) &&
              (e = parseFloat(RegExp.$1));
          } else
            "Netscape" == navigator.appName &&
              ((t = navigator.userAgent),
              null !=
                new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})").exec(t) &&
                (e = parseFloat(RegExp.$1)));
          return e;
        })() > 0 && ((this.hasWebGl = !1), (this.options.isIE = !0)),
        (this.thumbsShowing = !1),
        (this.bookmarkShowing = !1),
        (this.searchingString = !1),
        (this.tocShowing = !1),
        (this.menuShowing = !0),
        (this.fullscreenActive = !1);
      var p = {
          2: {
            currentPage: { vAlign: "bottom", hAlign: "center" },
            btnAutoplay: { hAlign: "left" },
            btnSound: { hAlign: "left" },
            btnExpand: { hAlign: "right" },
            btnZoomIn: { hAlign: "right" },
            btnZoomOut: { hAlign: "right" },
            btnSearch: { hAlign: "left" },
            btnBookmark: { hAlign: "left" },
            btnToc: { hAlign: "left" },
            btnThumbs: { hAlign: "left" },
            btnShare: { hAlign: "right" },
            btnPrint: { hAlign: "right" },
            btnDownloadPages: { hAlign: "right" },
            btnDownloadPdf: { hAlign: "right" },
            btnSelect: { hAlign: "right" },
          },
          3: {
            menuTransparent: !0,
            menu2Transparent: !1,
            menu2OverBook: !1,
            menu2Padding: 5,
            btnMargin: 5,
            currentPage: { vAlign: "top", hAlign: "center" },
            btnPrint: { vAlign: "top", hAlign: "right" },
            btnDownloadPdf: { vAlign: "top", hAlign: "right" },
            btnDownloadPages: { vAlign: "top", hAlign: "right" },
            btnThumbs: { vAlign: "top", hAlign: "left" },
            btnToc: { vAlign: "top", hAlign: "left" },
            btnBookmark: { vAlign: "top", hAlign: "left" },
            btnSearch: { vAlign: "top", hAlign: "left" },
            btnSelect: { vAlign: "top", hAlign: "right" },
            btnShare: { vAlign: "top", hAlign: "right" },
            btnAutoplay: { hAlign: "right" },
            btnExpand: { hAlign: "right" },
            btnZoomIn: { hAlign: "right" },
            btnZoomOut: { hAlign: "right" },
            btnSound: { hAlign: "right" },
            menuPadding: 5,
          },
          4: {
            menu2Transparent: !1,
            menu2OverBook: !1,
            sideMenuOverMenu2: !1,
            currentPage: { vAlign: "top", hAlign: "center" },
            btnAutoplay: { vAlign: "top", hAlign: "left" },
            btnSound: { vAlign: "top", hAlign: "left" },
            btnExpand: { vAlign: "top", hAlign: "right" },
            btnZoomIn: { vAlign: "top", hAlign: "right" },
            btnZoomOut: { vAlign: "top", hAlign: "right" },
            btnSearch: { vAlign: "top", hAlign: "left" },
            btnBookmark: { vAlign: "top", hAlign: "left" },
            btnToc: { vAlign: "top", hAlign: "left" },
            btnThumbs: { vAlign: "top", hAlign: "left" },
            btnShare: { vAlign: "top", hAlign: "right" },
            btnPrint: { vAlign: "top", hAlign: "right" },
            btnDownloadPages: { vAlign: "top", hAlign: "right" },
            btnDownloadPdf: { vAlign: "top", hAlign: "right" },
            btnSelect: { vAlign: "top", hAlign: "right" },
          },
        },
        c = {
          dark: {
            skinColor: "#EEE",
            btnColorHover: "#FFF",
            skinBackground: "#313538",
          },
          light: {
            skinColor: "#222",
            btnColorHover: "#000",
            skinBackground: "#FFF",
            floatingBtnColor: "#FFF",
            floatingBtnBackground: "#00000055",
          },
          gradient: {
            skinColor: "#EEE",
            btnColor: "#EEE",
            btnColorHover: "#FFF",
            skinBackground: "#313538DD",
            zoomMin: 0.85,
            menuOverBook: !0,
            menu2OverBook: !0,
            sideMenuOverMenu: !0,
            sideMenuOverMenu2: !0,
            menuBackground:
              "linear-gradient(to top, rgba(0, 0, 0, 0.65) 0%, transparent 100%)",
            menu2Background:
              "linear-gradient(to bottom, rgba(0, 0, 0, 0.65) 0%, transparent 100%)",
          },
        };
      for (var u in c) i.skin == u && (i = e.extend(!0, {}, c[u], i));
      for (var u in p)
        String(i.layout) === u && (i = e.extend(!0, {}, p[u], i));
      this.options = e.extend(!0, {}, e.fn.flipBook.options, i);
      var g,
        f,
        b = this.options;
      if (
        ((b.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)),
        b.isMobile)
      )
        for (var u in b.mobile) b[u] = b.mobile[u];
      if (
        ((this.strings = b.strings),
        (b.pageShininess = b.pageShininess / 2),
        (this.s = 0),
        b.googleAnalyticsTrackingCode &&
          ((this.gaCode = b.googleAnalyticsTrackingCode),
          t.ga ||
            (function (e, t, o, i, n, s, a) {
              (e.GoogleAnalyticsObject = n),
                (e.ga =
                  e.ga ||
                  function () {
                    (e.ga.q = e.ga.q || []).push(arguments);
                  }),
                (e.ga.l = 1 * new Date()),
                (s = t.createElement(o)),
                (a = t.getElementsByTagName(o)[0]),
                (s.async = 1),
                (s.src = "https://www.google-analytics.com/analytics.js"),
                a.parentNode.insertBefore(s, a);
            })(t, o, "script", 0, "ga"),
          ga("create", this.gaCode, "auto")),
        b.isMobile &&
          ((b.singlePageMode = !!b.singlePageModeIfMobile || b.singlePageMode),
          b.viewModeMobile && (b.viewMode = b.viewModeMobile),
          b.pageTextureSizeMobile &&
            (b.pageTextureSize = b.pageTextureSizeMobile),
          b.pageTextureSizeMobileSmall &&
            (b.pageTextureSizeSmall = b.pageTextureSizeMobileSmall),
          (b.touchSwipeEnabled = !0)),
        "3dSinglePage" == b.viewMode && (b.singlePageMode = !0),
        "2dSinglePage" == b.viewMode &&
          ((b.singlePageMode = !0), (b.viewMode = "2d")),
        b.singlePageMode &&
          ("2d" != b.viewMode && "swipe" != b.viewMode && (b.viewMode = "3d"),
          b.rightToLeft && (b.viewMode = "swipe")),
        b.singlePageMode && "3d" == b.viewMode && (b.rightToLeft = !1),
        "simple" == b.viewMode && ((b.viewMode = "3d"), (b.instantFlip = !0)),
        (b.sideMenuPosition = b.rightToLeft ? "right" : "left"),
        "webgl" == b.viewMode &&
          (!this.hasWebGl ||
            (parseFloat(
              !!(f = (g = (g || navigator.userAgent).toLowerCase()).match(
                /android\s([0-9\.]*)/
              )) && f[1]
            ) < b.minimumAndroidVersion &&
              this.isAndroid)) &&
          (b.viewMode = "3d"),
        "3d" != b.viewMode || s.has3d || (b.viewMode = "2d"),
        (this.webgl = "webgl" == b.viewMode),
        b.menuFloating && ((b.menuOverBook = !0), (b.sideMenuOverMenu = !0)),
        b.menu2Floating && ((b.menu2OverBook = !0), (b.sideMenuOverMenu2 = !0)),
        b.menuTransparent &&
          ((b.menuOverBook = !0),
          (b.sideMenuOverMenu = !0),
          (b.menuBackground = "none")),
        b.menu2Transparent
          ? ((b.menu2OverBook = !0),
            (b.sideMenuOverMenu2 = !0),
            (b.menu2Background = "none"))
          : (b.sideMenuOverMenu2 = !1),
        b.menuOverBook && (b.sideMenuOverMenu = !0),
        b.menu2OverBook && (b.sideMenuOverMenu2 = !0),
        b.isMobile && b.pdfBrowserViewerIfMobile && b.pdfUrl)
      )
        b.lightBox && !b.lightBoxOpened
          ? this.$elem
              .on("touched click", function () {
                k();
              })
              .css("cursor", "pointer")
          : k();
      else if (b.isIE && b.pdfBrowserViewerIfIE && b.pdfUrl)
        b.lightBox && !b.lightBoxOpened
          ? this.$elem
              .on("touched click", function () {
                k();
              })
              .css("cursor", "pointer")
          : k();
      else {
        (b.pdfMode = Boolean(b.pdfUrl && "" != b.pdfUrl)),
          b.backgroundTransparent && (b.backgroundColor = "none"),
          (this.wrapper = e(o.createElement("div")).addClass(
            "flipbook-main-wrapper"
          )),
          "" != b.backgroundColor &&
            this.wrapper.css("background", b.backgroundColor),
          "" != b.backgroundPattern &&
            this.wrapper.css(
              "background",
              "url(" + b.backgroundPattern + ") repeat"
            ),
          "" != b.backgroundImage &&
            (this.wrapper.css(
              "background",
              "url(" + b.backgroundImage + ") no-repeat"
            ),
            this.wrapper.css("background-size", "cover"),
            this.wrapper.css("background-position", "center center")),
          (this.bookLayer = e(o.createElement("div"))
            .addClass("flipbook-bookLayer")
            .appendTo(s.wrapper)),
          b.rightClickEnabled ||
            this.bookLayer.bind("contextmenu", function (e) {
              return !1;
            }),
          b.hideMenu &&
            (this.bookLayer.css("bottom", "0"), (b.menuOverBook = !0)),
          (b.pagesOriginal = JSON.parse(JSON.stringify(b.pages))),
          (this.book = e(o.createElement("div"))
            .addClass("book")
            .appendTo(s.bookLayer)),
          b.preloader
            ? (this.preloader = b.preloader)
            : !e(".flipbook-preloader").length && b.lightBox
            ? (this.preloader = e(
                '<div class="flipbook-preloader cssload-container"><div class="cssload-speeding-wheel"/><div class="flipbook-loading-text"></div><div class="flipbook-loading-bg"></div></div>'
              ))
            : b.lightBox
            ? (this.preloader = e(".flipbook-preloader"))
            : (this.preloader = e(
                '<div class="flipbook-preloader-2 cssload-container"><div class="cssload-speeding-wheel"/><div class="flipbook-loading-text"></div><div class="flipbook-loading-bg"></div></div>'
              )),
          e(".flipbook-loading-text").text(b.preloaderText),
          this.setLoadingProgress(0),
          !b.deeplinkingPrefix &&
            b.deeplinking &&
            b.deeplinking.prefix &&
            (b.deeplinkingPrefix = b.deeplinking.prefix),
          (b.deeplinkingEnabled =
            b.deeplinkingPrefix ||
            b.deeplinkingEnabled ||
            (b.deeplinking && b.deeplinking.enabled)),
          b.deeplinkingEnabled &&
            (v(),
            e(t).bind("hashchange", function (e) {
              v();
            })),
          (this.dispose = function () {
            this.disposed = !0;
          }),
          (b.main = this);
        var m = {
          _events: {},
          on: function (e, t) {
            this._events[e] || (this._events[e] = []), this._events[e].push(t);
          },
          off: function (e, t) {
            if (this._events[e]) {
              var o = this._events[e].indexOf(t);
              o > -1 && this._events[e].splice(o, 1);
            }
          },
          trigger: function (e) {
            if (this._events[e]) {
              var t = 0,
                o = this._events[e].length;
              if (o)
                for (; t < o; t++)
                  this._events[e][t].apply(this, [].slice.call(arguments, 1));
            }
          },
        };
        m.on("pageLoaded", function (e) {
          (b.pages[e.index] = b.pages[e.index] || {}),
            (b.pages[e.index].canvas = b.pages[e.index].canvas || {}),
            (b.pages[e.index].canvas[e.size] = e.canvas),
            s.searchingString && s.mark(s.searchingString, !0);
        }),
          m.on("pageUnloaded", function (e) {
            e.unloadedPages.forEach(function (e) {
              s.Book.onPageUnloaded && s.Book.onPageUnloaded(e.index, e.size);
            });
          }),
          m.on("pdfinit", function () {
            (b.tableOfContent = s.pdfService.outline || b.tableOfContent),
              (b.doublePage = s.pdfService.double),
              b.doublePage || (b.backCover = s.pdfService.numPages % 2 == 0),
              (s.viewportOriginal = s.pdfService.viewports[0]),
              (b.firstPage = {
                width: s.pdfService.viewports[0].width,
                height: s.pdfService.viewports[0].height,
                ratio:
                  s.pdfService.viewports[0].width /
                  s.pdfService.viewports[0].height,
              }),
              s.pdfService.numPages > 1 &&
                (b.secondPage = {
                  width: s.pdfService.viewports[1].width,
                  height: s.pdfService.viewports[1].height,
                  ratio:
                    s.pdfService.viewports[1].width /
                    s.pdfService.viewports[1].height,
                }),
              (b.numPages = s.pdfService.numPages),
              1 == b.numPages &&
                ((b.viewMode = "swipe"),
                (b.singlePageMode = !0),
                (b.btnNext.enabled = !1),
                (b.btnPrev.enabled = !1),
                (b.btnFirst.enabled = !1),
                (b.btnLast.enabled = !1),
                (b.sideNavigationButtons = !1),
                (b.btnAutoplay.enabled = !1),
                (b.printMenu = !1),
                (b.downloadMenu = !1),
                (s.webgl = !1));
            for (var t = [], o = 0; o < b.numPages; o++) {
              var i = { canvas: {} };
              b.pages && b.pages[o]
                ? e.extend(i, b.pages[o])
                : (i.title = o + 1),
                (t[o] = i);
            }
            b.pages = t;
            s.book.height();
            var n = b.pageTextureSize;
            (b.pageWidth = parseInt(
              (n * s.viewportOriginal.width) / s.viewportOriginal.height
            )),
              (b.pageHeight = n),
              (b.pw = b.pageWidth),
              (b.ph = b.pageHeight),
              (b.zoomSize = b.zoomSize || b.pageTextureSize),
              s.start();
          }),
          m.on("toolSelect", function () {
            s.bookLayer.removeClass("flipbook-move"),
              s.btnSelect && s.btnSelect.addClass("flipbook-btn-active"),
              s.bookLayer.removeClass("flipbook-disable-text-selection");
          }),
          m.on("toolMove", function () {
            s.bookLayer.addClass("flipbook-move"),
              s.btnSelect && s.btnSelect.removeClass("flipbook-btn-active"),
              s.bookLayer.addClass("flipbook-disable-text-selection");
          }),
          (this.model = m),
          b.lightBox
            ? ((b.btnClose.enabled = !0),
              (this.lightbox = new FLIPBOOK.Lightbox(this, this.wrapper, b)),
              (this.lightboxStartedTimes = 0),
              this.wrapper.css("background", "none"),
              this.bookLayer.css("background", "none"),
              this.book.css("background", "none"),
              this.preloader.appendTo(this.$body).css("position", "fixed"),
              this.$elem
                .css("cursor", "pointer")
                .bind("tap click", function (t) {
                  (s.lightboxStartPage = e(this).attr("data-page")),
                    s.started
                      ? (s.lightboxStart(),
                        b.lightBoxFullscreen &&
                          setTimeout(function () {
                            s.toggleExpand();
                          }, 0))
                      : (w(),
                        b.lightBoxFullscreen &&
                          setTimeout(function () {
                            s.toggleExpand();
                          }, 100));
                }),
              b.lightBoxOpened
                ? (w(), e(t).trigger("r3d-lightboxloadingstarted"))
                : b.lightboxPreload &&
                  ("undefined" != typeof IScroll ||
                    FLIPBOOK.scriptsAdded[FLIPBOOK.iscrollSrc] ||
                    s.loadScript(FLIPBOOK.iscrollSrc, function () {}),
                  void 0 !== FLIPBOOK.PdfService ||
                    FLIPBOOK.scriptsAdded[FLIPBOOK.pdfServiceSrc] ||
                    s.loadScript(FLIPBOOK.pdfServiceSrc, function () {}),
                  b.pdfMode &&
                    ("undefined" != typeof pdfjsLib ||
                      FLIPBOOK.scriptsAdded[FLIPBOOK.pdfjsSrc] ||
                      s.loadScript(FLIPBOOK.pdfjsSrc, function () {}),
                    void 0 !== FLIPBOOK.PdfService ||
                      FLIPBOOK.scriptsAdded[FLIPBOOK.pdfServiceSrc] ||
                      s.loadScript(FLIPBOOK.pdfServiceSrc, function () {}),
                    b.btnSearch.enabled &&
                      (FLIPBOOK.scriptsAdded[FLIPBOOK.markSrc] ||
                        s.loadScript(FLIPBOOK.markSrc, function () {}))),
                  "webgl" == b.viewMode &&
                    ("undefined" != typeof THREE ||
                      FLIPBOOK.scriptsAdded[FLIPBOOK.threejsSrc] ||
                      s.loadScript(FLIPBOOK.threejsSrc, function () {}))),
              (this.fullscreenElement = o.documentElement))
            : ((b.btnClose.enabled = !1),
              this.preloader.appendTo(this.wrapper),
              this.wrapper.appendTo(this.$elem),
              (this.fullscreenElement = this.$elem[0]),
              w());
      }
      function k() {
        b.pdfBrowserViewerFullscreen
          ? t.open(b.pdfUrl, b.pdfBrowserViewerFullscreenTarget)
          : e('<object type="application/pdf"/>')
              .width("100%")
              .height("100%")
              .attr("data", b.pdfUrl)
              .appendTo(s.$elem);
      }
      function v() {
        if (!s.disposed) {
          var e = t.location.hash,
            o = s.getPageFromHash(),
            i = o;
          o < 1 ? (o = 1) : s.numPages && o > s.numPages && (o = s.numPages),
            o &&
              ((o =
                b.rightToLeft && b.pages && b.pages.length
                  ? b.pages.length - o + 1
                  : o),
              s.started
                ? s.Book &&
                  (s.lightbox &&
                    !FLIPBOOK.lightboxOpened &&
                    (s.lightbox.openLightbox(), s.lightboxStart()),
                  s.goToPage(o, -1 == e.indexOf("flip")))
                : ((b.startPage = i),
                  b.lightBox &&
                    (w(),
                    b.lightBoxFullscreen &&
                      setTimeout(function () {
                        s.toggleExpand();
                      }, 100))));
        }
      }
      function w() {
        if (b.fillPreloader.enabled) {
          s.$fillPreloader = e("<div>").addClass("flipbook-fillPreloader");
          var t = new Image();
          (t.src = b.fillPreloader.imgEmpty),
            (t.onload = function () {
              var o = new Image();
              (o.src = b.fillPreloader.imgFull),
                (o.onload = function () {
                  e(t).appendTo(s.$fillPreloader),
                    (s.$fillPreloaderImg = e(o).appendTo(s.$fillPreloader)),
                    s.$fillPreloader.appendTo(s.wrapper),
                    P();
                });
            });
        } else P();
      }
      function P() {
        s.initialized ||
          ((s.id = Date.now()),
          s.addPageItems(),
          b.pdfMode ? s.initPdf() : s.initJpg(),
          s.setLoadingProgress(0.1),
          s.lightbox && s.options.lightboxShowMenu && s.createMenu(),
          (s.initialized = !0));
      }
    }),
    (FLIPBOOK.Main.prototype = {
      start: function () {
        this.options.dp && (this.options.doublePage = !0),
          this.started ||
            ((this.model.pageW = this.options.pageWidth),
            (this.model.bookW = 2 * this.options.pageWidth),
            this.options.singlePageMode && (this.model.bookW /= 2),
            (this.model.pageH = this.options.pageHeight),
            (this.model.bookH = this.options.pageHeight),
            this.options.numPages % 2 == 0
              ? (this.options.numSheets = (this.options.numPages + 2) / 2)
              : (this.options.numSheets = (this.options.numPages + 1) / 2),
            (this.started = !0),
            this.options.lightBox &&
              (this.lightbox.openLightbox(), this.lightboxStart()),
            this.createBook(),
            this.updateSkinColors());
      },
      updateSkinColors: function () {
        var e = this.options;
        e.skinColor &&
          this.wrapper.find(".skin-color").css("color", e.skinColor),
          e.skinBackground &&
            this.wrapper
              .find(".skin-color-bg")
              .css("background", e.skinBackground);
      },
      lightboxStart: function () {
        var e = this;
        this.started || this.start(),
          void 0 !== this.Book
            ? (this.Book.enable(),
              this.lightboxStartPage
                ? this.goToPage(this.lightboxStartPage, !0)
                : this.options.lightboxStartPage &&
                  this.goToPage(this.options.lightboxStartPage, !0),
              this.lightboxStartedTimes++,
              this.gaCode &&
                ga("send", {
                  hitType: "event",
                  eventCategory: "Flipbook : " + this.options.name,
                  eventAction: "lightbox open",
                  eventLabel: "lightbox open",
                  eventValue: this.lightboxStartedTimes,
                  nonInteraction: !0,
                }),
              this.updateCurrentPage(),
              this.initColors(),
              this.resize())
            : setTimeout(function () {
                e.lightboxStart();
              }, 100);
      },
      setHash: function (e) {
        e < 1 && (e = 1),
          "#" + this.options.deeplinkingPrefix + e != t.location.hash &&
            this.options.deeplinkingEnabled &&
            this.Book.enabled &&
            this.hash != e &&
            ((t.location.hash =
              "#" + this.options.deeplinkingPrefix + String(e)),
            (this.hash = e));
      },
      clearHash: function () {
        var e,
          i,
          n = t.location;
        "pushState" in history
          ? history.pushState("", o.title, n.pathname + n.search)
          : ((e = o.body.scrollTop),
            (i = o.body.scrollLeft),
            (n.hash = ""),
            (o.body.scrollTop = e),
            (o.body.scrollLeft = i));
      },
      getPageFromHash: function () {
        var e,
          o = t.location.hash,
          i = "#" + this.options.deeplinkingPrefix;
        return (
          -1 !== o.indexOf(i) &&
            (e = parseInt(
              t.location.hash
                .replace(/#/g, "")
                .replace(this.options.deeplinkingPrefix, "")
            )),
          e
        );
      },
      initColors: function () {
        this.wrapper
          .find(".skin-color-bg")
          .removeClass("flipbook-bg-light")
          .removeClass("flipbook-bg-dark")
          .addClass("flipbook-bg-" + this.options.skin),
          this.wrapper
            .find(".skin-color")
            .removeClass("flipbook-color-light")
            .removeClass("flipbook-color-dark")
            .addClass("flipbook-color-" + this.options.skin),
          this.updateSkinColors();
      },
      lightboxEnd: function () {
        "undefined" != typeof screenfull &&
          screenfull.isFullscreen &&
          screenfull.exit(),
          t.location.hash && this.clearHash(),
          this.setLoadingProgress(1),
          this.Book && this.Book.disable();
      },
      turnPageComplete: function () {
        (this.animating = !1), this.updateCurrentPage();
        var e = this.Book.rightIndex || 0;
        this.options.rightToLeft && (e = this.options.pages.length - e),
          this.pdfService && this.pdfService.setRightIndex(e),
          this.options.zoomReset && this.Book.zoomTo(this.options.zoomMin);
      },
      updateCurrentPage: function () {
        var o,
          i = this.options.rightToLeft,
          n = this.options.numPages,
          s = this.Book.rightIndex || 0;
        s % 2 == 1 && s++,
          i && (s = this.options.pages.length - s),
          this.options.singlePageMode ||
          this.Book.singlePage ||
          1 == this.Book.view
            ? (this.Book.getCurrentPageNumber
                ? (o = this.Book.getCurrentPageNumber())
                : (i && s--, (o = s + 1)),
              this.setHash(o),
              (this.cPage = [o - 1]))
            : (s > n || (s == n && n % 2 == 0)
                ? ((o = n), (this.cPage = [n - 1]))
                : s < 1
                ? ((o = 1), (this.cPage = [0]))
                : ((o = String(s) + "-" + String(s + 1)),
                  (this.cPage = [s - 1, s])),
              this.setHash(s)),
          i
            ? (this.enableNext(s > 0),
              this.enablePrev(this.Book.canFlipPrev() || s < n - 1))
            : (this.enablePrev(s > 0),
              this.enableNext(this.Book.canFlipNext() || s < n - 1)),
          2 == this.cPage.length
            ? (this.wrapper.find(".c-l-p").show(),
              this.wrapper.find(".c-r-p").show(),
              this.wrapper.find(".c-p").hide())
            : (this.wrapper.find(".c-l-p").hide(),
              this.wrapper.find(".c-r-p").hide(),
              this.wrapper.find(".c-p").show()),
          void 0 !== this.currentPage &&
            (this.s && this.options.pdfPageScale > 0 && this.goToPage(0),
            o != this.currentPageValue &&
              ((this.currentPageValue = String(o)),
              this.currentPage.text(o + " / " + String(n)),
              this.currentPageInput.width(this.currentPageHolder.width()),
              this.resize(),
              e(this).trigger({
                type: "pagechange",
                page: this.currentPageValue,
                name: this.options.name,
              }),
              e(t).trigger({
                type: "r3d-pagechange",
                page: this.currentPageValue,
                name: this.options.name,
              }),
              this.gaCode &&
                ga("send", {
                  hitType: "event",
                  eventCategory: "Flipbook : " + this.options.name,
                  eventAction: "page " + this.currentPageValue,
                  eventLabel: "page" + this.currentPageValue,
                  nonInteraction: !0,
                })));
      },
      initJpg: function () {
        var e = this;
        1 == this.options.numPages &&
          ((this.options.viewMode = "swipe"),
          (this.options.singlePageMode = !0),
          (this.webgl = !1)),
          this.loadPage(0, this.options.pageTextureSize, function () {
            e.setLoadingProgress(0.5);
            var t = e.options;
            if (1 == t.pages.length) {
              var o = t.pages[0].img;
              (t.pw = o.width),
                (t.ph = o.height),
                (t.pageWidth = o.width),
                (t.pageHeight = o.height),
                (t.pageMode = "singlePage"),
                (t.doublePage = !1),
                (t.zoomSize = t.zoomSize || o.height),
                e.setLoadingProgress(0.7),
                (t.btnNext.enabled = !1),
                (t.btnPrev.enabled = !1),
                (t.btnFirst.enabled = !1),
                (t.btnLast.enabled = !1),
                (t.sideNavigationButtons = !1),
                (t.btnAutoplay.enabled = !1),
                e.start();
            } else
              e.loadPage(1, t.pageTextureSize, function () {
                var o = t.pages[0].img,
                  i = t.pages[1].img,
                  n = o.width / o.height,
                  s = i.width / i.height;
                (t.pw = o.width),
                  (t.ph = o.height),
                  (t.pageWidth = o.width),
                  (t.pageHeight = o.height),
                  (t.doublePage = s / n > 1.5),
                  t.doublePage || (t.backCover = t.pages.length % 2 == 0),
                  (t.zoomSize = t.zoomSize || o.height),
                  e.setLoadingProgress(0.7),
                  e.start();
              });
          });
      },
      initPdf: function () {
        if (!this.started) {
          ("swipe" == this.options.viewMode ||
            (this.options.btnSearch && this.options.btnSearch.enabled)) &&
            (this.options.textLayer = !0),
            (this.options.textLayer = !0);
          var e = this;
          if ("undefined" == typeof pdfjsLib) {
            if (!FLIPBOOK.scriptsAdded[FLIPBOOK.pdfjsSrc])
              return void e.loadScript(FLIPBOOK.pdfjsSrc, function () {
                e.initPdf();
              });
            if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.pdfjsSrc])
              return void setTimeout(function () {
                e.initPdf();
              }, 100);
          }
          if ((this.setLoadingProgress(0.2), void 0 === FLIPBOOK.PdfService)) {
            if (!FLIPBOOK.scriptsAdded[FLIPBOOK.pdfServiceSrc])
              return void e.loadScript(FLIPBOOK.pdfServiceSrc, function () {
                e.initPdf();
              });
            if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.pdfServiceSrc])
              return void setTimeout(function () {
                e.initPdf();
              }, 100);
          }
          this.setLoadingProgress(0.3),
            t.CanvasPixelArray &&
              (CanvasPixelArray.prototype.set = function (e) {
                for (var t = this.length, o = 0; o < t; o++) this[o] = e[o];
              }),
            (PDFJS = pdfjsLib),
            (pdfjsLib.externalLinkTarget = pdfjsLib.LinkTarget.BLANK),
            (pdfjsLib.GlobalWorkerOptions.workerSrc =
              this.options.pdfjsworkerSrc || FLIPBOOK.pdfjsworkerSrc),
            "https:" == location.protocol
              ? (e.options.pdfUrl = e.options.pdfUrl.replace(
                  "http://",
                  "https://"
                ))
              : "http:" == location.protocol &&
                (e.options.pdfUrl = e.options.pdfUrl.replace(
                  "https://",
                  "http://"
                ));
          var o = {
            cMapPacked: !0,
            cMapUrl: "cmaps/",
            disableAutoFetch: !0,
            disableStream: !0,
            url: e.options.pdfUrl,
            rangeChunkSize: 1024 * Number(e.options.rangeChunkSize),
          };
          if (this.options.password) {
            var i = prompt("Please enter PDF password", "");
            if (null == i)
              return (
                this.lightbox && this.lightbox.closeLightbox(!0),
                this.setLoadingProgress(1),
                void (this.pdfinitStarted = !1)
              );
            o.password = i;
          }
          if (!this.pdfinitStarted)
            (this.pdfinitStarted = !0),
              pdfjsLib.getDocument(o).promise.then(
                function (t) {
                  (e.pdfDocument = t),
                    (e.pdfService = new FLIPBOOK.PdfService(
                      t,
                      e.model,
                      e.options
                    )),
                    (e.options.thumbLoaded = function (t) {
                      (e.options.thumbs = e.options.thumbs || []),
                        (e.options.thumbs[t.index] = t);
                    }),
                    e.setLoadingProgress(0.5),
                    e.pdfService.init();
                },
                function (t) {
                  "PasswordException" == t.name
                    ? ((e.pdfinitStarted = !1),
                      (e.options.password = !0),
                      e.initPdf())
                    : alert(t);
                }
              );
        }
      },
      loadPageHTML: function (t, i) {
        var n = this,
          s = ((t = t), this.options);
        this.options.pdfMode
          ? this.pdfService.loadTextLayer(t, function (e) {
              i.call(n, n.options.pages[t].htmlContent, t);
            })
          : s.pages[t].json
          ? this.loadPageJSON(t, function (a) {
              var r = s.pages[t] || {};
              if (!r.htmlContentInitialized) {
                var l = o.createElement("div");
                l.classList.add("flipbook-page-htmlContent"),
                  l.classList.add("page" + String(t)),
                  (l.innerHTML = decodeURIComponent(a.data)),
                  r.htmlContent && e(l).append(e(r.htmlContent)),
                  (r.htmlContent = l),
                  e(r.htmlContent)
                    .find(".internalLink")
                    .each(function () {
                      var e = n;
                      this.onclick = function () {
                        var t = Number(this.dataset.page);
                        return (
                          (t = e.options.rightToLeft
                            ? e.options.pages.length - t + 1
                            : t),
                          e.goToPage(t),
                          !1
                        );
                      };
                    }),
                  (r.htmlContentInitialized = !0);
              }
              i.call(n, r.htmlContent, t);
            })
          : i.call(this, s.pages[t].htmlContent, t);
      },
      loadPageJSON: function (t, o) {
        var i = this.options.pages[t] || {},
          n = this;
        if (!i.jsonLoading && !i.jsonLoaded)
          return (
            (i.jsonLoading = !0),
            void e.getJSON(i.json, function (e) {
              (i.jsonLoaded = !0), (i.jsonLoading = !1), o.call(n, e);
            })
          );
        i.jsonLoaded
          ? o.call(n)
          : setTimeout(function () {
              n.loadPageJSON(t, o);
            }, 100);
      },
      loadPage: function (e, t, i) {
        var n = this,
          s =
            this.options.pages &&
            this.options.pages[e] &&
            this.options.pages[e].src;
        if (this.options.pdfMode && !s) this.loadPageFromPdf(e, t, i);
        else {
          n = this;
          var a = this.options.pages[e];
          a.img
            ? a.imgLoaded
              ? n.pageLoaded({ index: e, size: t, image: a.img }, i)
              : setTimeout(function () {
                  n.loadPage(e, t, i);
                }, 300)
            : ((a.img = o.createElement("img")),
              a.img.setAttribute("data-id", e),
              (a.img.onload = function () {
                (a.imgLoaded = !0),
                  n.pageLoaded({ index: e, size: t, image: a.img }, i);
              }),
              "webgl" == this.options.viewMode &&
                (a.img.crossOrigin = "Anonymous"),
              "https:" == location.protocol
                ? (a.src = a.src.replace("http://", "https://"))
                : "http:" == location.protocol &&
                  (a.src = a.src.replace("https://", "http://")),
              (a.img.src = a.src));
        }
      },
      pageLoaded: function (e, t) {
        t.call(this, e, t),
          this.options.loadAllPages &&
            e.index < this.options.numPages - 1 &&
            this.loadPage(e.index + 1, e.size, function () {}),
          this.searchingString && this.mark(this.searchingString, !0);
      },
      loadPageFromPdf: function (e, t, o) {
        (t = t || this.options.pageTextureSize),
          this.options.pages[e]
            ? this.pdfService.renderBookPage(e, t, o)
            : o.call(this);
      },
      getString: function (e) {
        return this.options.strings[e];
      },
      mark: function (t, o) {
        t != this.markedStr &&
          ((this.markedStr = t),
          this.options.pages.forEach(function (o) {
            var i = e(o.htmlContent).find(".flipbook-textLayer");
            o.marked != t &&
              i.length &&
              ((o.marked = t),
              i.unmark({
                done: function () {
                  i.mark(t, { acrossElements: !0, separateWordSearch: !1 });
                },
              }));
          }));
      },
      unmark: function () {
        (this.searchingString = null),
          (this.markedStr = null),
          this.options.pages.forEach(function (t) {
            t.marked && ((t.marked = null), e(t.htmlContent).unmark());
          });
      },
      setTool: function (e) {
        (this.tool = e), this.model.trigger(e);
      },
      toggleTool: function () {
        var e = "toolSelect" == this.tool ? "toolMove" : "toolSelect";
        this.setTool(e);
      },
      toggleSound: function () {
        var e = this.options;
        (e.sound = !e.sound), this.toggleIcon(this.btnSound, e.sound);
      },
      toggleIcon: function (e, t) {
        var o = e.icon,
          i = e.iconAlt;
        t
          ? (e.find("." + o).show(), e.find("." + i).hide())
          : (e.find("." + o).hide(), e.find("." + i).show());
      },
      scrollPageIntoView: function (e) {
        var t = this.options.rightToLeft
          ? this.options.pages.length - e.pageNumber + 1
          : e.pageNumber;
        this.goToPage(t);
      },
      loadScript: function (e, t) {
        var n = this,
          s = o.createElement("script"),
          a = o.getElementsByTagName("script")[0];
        (s.async = 1),
          a.parentNode.insertBefore(s, a),
          (FLIPBOOK.scriptsAdded[e] = !0),
          (s.onload = s.onreadystatechange =
            function (o, a) {
              (a || !s.readyState || /loaded|complete/.test(s.readyState)) &&
                ((s.onload = s.onreadystatechange = null),
                (s = i),
                a || (t && t.call(n)),
                (FLIPBOOK.scriptsLoaded[e] = !0));
            }),
          (s.src = e);
      },
      createBook: function () {
        var t = this,
          o = this.model,
          i = this.options;
        if (
          ("material" != i.icons ||
            FLIPBOOK.MaterialIconsLoaded ||
            ((FLIPBOOK.MaterialIconsLoaded = !0),
            e("head").append(
              '<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">'
            )),
          "undefined" == typeof IScroll)
        ) {
          if (!FLIPBOOK.scriptsAdded[FLIPBOOK.iscrollSrc])
            return void t.loadScript(FLIPBOOK.iscrollSrc, t.createBook);
          if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.iscrollSrc])
            return void setTimeout(function () {
              t.createBook();
            }, 100);
        }
        if (
          (this.options.searchOnStart && (this.options.btnSearch.enabled = !0),
          this.options.btnSearch.enabled)
        ) {
          if (!FLIPBOOK.scriptsAdded[FLIPBOOK.markSrc])
            return void t.loadScript(FLIPBOOK.markSrc, t.createBook);
          if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.markSrc])
            return void setTimeout(function () {
              t.createBook();
            }, 100);
        }
        if ((t.setLoadingProgress(0.9), "webgl" == t.options.viewMode)) {
          if ("undefined" == typeof THREE) {
            if (!FLIPBOOK.scriptsAdded[FLIPBOOK.threejsSrc])
              return void t.loadScript(FLIPBOOK.threejsSrc, t.createBook);
            if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.threejsSrc])
              return void setTimeout(function () {
                t.createBook();
              }, 100);
          }
          if (void 0 === FLIPBOOK.BookWebGL) {
            if (!FLIPBOOK.scriptsAdded[FLIPBOOK.flipbookWebGlSrc])
              return void t.loadScript(FLIPBOOK.flipbookWebGlSrc, t.createBook);
            if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.flipbookWebGlSrc])
              return void setTimeout(function () {
                t.createBook();
              }, 100);
          }
        } else if ("swipe" == t.options.viewMode) {
          if (void 0 === FLIPBOOK.BookSwipe) {
            if (!FLIPBOOK.scriptsAdded[FLIPBOOK.flipBookSwipeSrc])
              return void t.loadScript(FLIPBOOK.flipBookSwipeSrc, t.createBook);
            if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.flipBookSwipeSrc])
              return void setTimeout(function () {
                t.createBook();
              }, 100);
          }
        } else if (void 0 === FLIPBOOK.Book3) {
          if (!FLIPBOOK.scriptsLoaded[FLIPBOOK.flipbookBook3Src])
            return void t.loadScript(FLIPBOOK.flipbookBook3Src, t.createBook);
          if (!FLIPBOOK.scriptsAdded[FLIPBOOK.flipbookBook3Src])
            return void setTimeout(function () {
              t.createBook();
            }, 100);
        }
        if (
          (this.setLoadingProgress(1),
          this.initEasing(),
          t.options.doublePage && t.options.pages.length > 2)
        ) {
          for (
            var n = [t.options.pages[0]], s = 1;
            s <= t.options.pages.length - 2;
            s++
          ) {
            var a = {
                src: (l = t.options.pages[s]).src,
                thumb: l.thumb,
                title: l.title,
                htmlContent: l.htmlContent,
                json: l.json,
                side: "left",
              },
              r = {
                src: l.src,
                thumb: l.thumb,
                title: l.title,
                htmlContent: l.htmlContent,
                json: l.json,
                side: "right",
              };
            n.push(a), n.push(r);
          }
          if (t.options.backCover)
            n.push(t.options.pages[t.options.pages.length - 1]);
          else {
            var l;
            (a = {
              src: (l = t.options.pages[t.options.pages.length - 1]).src,
              thumb: l.thumb,
              title: l.title,
              htmlContent: l.htmlContent,
              json: l.json,
              side: "left",
            }),
              (r = {
                src: l.src,
                thumb: l.thumb,
                title: l.title,
                htmlContent: l.htmlContent,
                json: l.json,
                side: "right",
              });
            n.push(a), n.push(r);
          }
          t.options.pages = n;
        }
        if (
          ((this.options.numPages = this.options.pages.length),
          this.options.numPages % 2 == 0 ||
            this.options.singlePageMode ||
            ((this.oddPages = !0),
            (this.options.oddPages = !0),
            this.options.pages.push({
              src: this.options.assets.preloader,
              empty: !0,
            })),
          t.options.pages.length > 0)
        )
          for (s = 0; s < t.options.pages.length; s++)
            void 0 !== t.options.pages[s].htmlContent &&
              ((t.options.hasHtmlContent = !0),
              (t.options.pages[s].htmlContent = e(
                t.options.pages[s].htmlContent
              )));
        function d() {
          t.flipsound = e(
            '<audio><source src="' +
              t.options.assets.flipMp3 +
              '" type="audio/mpeg"></audio>'
          )[0];
        }
        if ("webgl" == t.options.viewMode) {
          var h = t.options;
          (h.scroll = t.scroll),
            (h.parent = t),
            (t.Book = new FLIPBOOK.BookWebGL(t.book[0], o, h)),
            (t.webglMode = !0),
            t.initSwipe(),
            d();
        } else
          "swipe" == t.options.viewMode
            ? ((t.Book = new FLIPBOOK.BookSwipe(
                t.book[0],
                t.bookLayer[0],
                o,
                i
              )),
              t.initSwipe())
            : ("2d" != t.options.viewMode && (t.options.viewMode = "3d"),
              (t.Book = new FLIPBOOK.Book3(t.book[0], o, i)),
              t.initSwipe(),
              (t.webglMode = !1),
              d());
        this.resize(),
          t.Book.enable(),
          t.book.hide().fadeIn("slow"),
          (this.tocCreated = !1),
          this.createMenu(),
          this.onZoom(this.options.zoom),
          1 == this.options.pages.length && (this.rightToLeft = !1),
          (FLIPBOOK.books = FLIPBOOK.books || {}),
          (FLIPBOOK.books[t.id] = t.Book);
        var p = e(t.Book);
        p.bind("loadPagesFromPdf", function (e, o, i, n) {
          t.loadPagesFromPdf(o, i, n);
        }),
          p.bind("turnPageComplete", function (e) {
            t.turnPageComplete();
          }),
          p.bind("initEasing", function (e) {
            t.initEasing();
          }),
          p.bind("playFlipSound", function (e) {
            t.playFlipSound();
          }),
          p.bind("closeLightbox", function (e) {
            t.closeLightbox();
          }),
          p.bind("updateCurrentPage", function (e) {
            t.updateCurrentPage();
          }),
          this.createLogo(),
          this.onBookCreated();
      },
      addPageItems: function () {
        var t = this.options.pages;
        this.id;
        for (var o in t) {
          var i = t[o];
          if (((i.htmlContent = i.htmlContent || ""), i.items))
            for (var n in i.items) {
              var s = i.items[n];
              switch (s.type) {
                case "iframe":
                  (r =
                    '<iframe src="' +
                    s.src +
                    '" width="' +
                    s.width +
                    '" height="' +
                    s.height +
                    '" style="position:absolute;top:' +
                    s.y +
                    "px;left:" +
                    s.x +
                    'px;bottom:auto;right:auto;" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>'),
                    (i.htmlContent += r);
                  break;
                case "image":
                  (r =
                    '<img src="' +
                    s.src +
                    '" style="position:absolute;top:' +
                    s.y +
                    "px;left:" +
                    s.x +
                    "px;width:" +
                    s.width +
                    "px;height:" +
                    s.height +
                    'px;bottom:auto;right:auto;">'),
                    (i.htmlContent += r);
                  break;
                case "link":
                  if (
                    ((r = e("<a>")
                      .addClass("flipbook-page-item")
                      .width(s.width)
                      .height(s.height)
                      .css({
                        top: s.y + "px",
                        left: s.x + "px",
                        background: this.options.linkColor,
                      })
                      .attr(
                        "onmouseover",
                        'this.style.background="' +
                          this.options.linkColorHover +
                          '"'
                      )
                      .attr(
                        "onmouseout",
                        'this.style.background="' + this.options.linkColor + '"'
                      )),
                    s.url)
                  )
                    r.attr("href", s.url).attr("target", "_blank");
                  else if (s.page) {
                    var a = "#" + this.options.deeplinkingPrefix + s.page;
                    s.flip && (a += "flip"), r.attr("href", a);
                  }
                  i.htmlContent += r[0].outerHTML;
                  break;
                case "video":
                  var r = e("<video>").addClass("flipbook-page-item");
                  s.width && r.attr("width", s.width),
                    s.height && r.attr("height", s.height),
                    s.x && r.css("left", s.x + "px"),
                    s.y && r.css("top", s.y + "px"),
                    s.controls && r.prop("controls", "true"),
                    s.autoplay && r.prop("autoplay", "true");
                  e('<source type="video/mp4">').attr("src", s.src).appendTo(r);
                  i.htmlContent += r[0].outerHTML;
              }
            }
        }
      },
      onBookCreated: function () {
        var i = this.options,
          n = this;
        i.rightToLeft
          ? n.goToPage(Number(i.pages.length - Number(i.startPage) + 1), !0)
          : n.goToPage(Number(i.startPage), !0),
          e(t).resize(function () {
            n.resize();
          }),
          n.resize(),
          n.Book.updateVisiblePages(),
          n.Book.zoomTo(i.zoomMin),
          this.updateCurrentPage(),
          o.addEventListener("keydown", function (e) {
            if (n.Book.enabled) {
              if (
                !n.options.arrowsAlwaysEnabledForNavigation ||
                (37 != e.keyCode && 39 != e.keyCode)
              ) {
                if (
                  !n.options.lightBox &&
                  !n.fullscreenActive &&
                  (n.options.arrowsDisabledNotFullscreen ||
                    n.bodyHasVerticalScrollbar())
                )
                  return;
              } else;
              switch ((e = e || t.event).keyCode) {
                case 37:
                  n.zoom > 1 ? n.moveBook("left") : n.prevPage();
                  break;
                case 38:
                  n.zoom > 1 ? n.moveBook("up") : n.nextPage();
                  break;
                case 39:
                  n.zoom > 1 ? n.moveBook("right") : n.nextPage();
                  break;
                case 33:
                  n.prevPage();
                  break;
                case 34:
                  n.nextPage();
                  break;
                case 36:
                  n.firstPage();
                  break;
                case 35:
                  n.lastPage();
                  break;
                case 40:
                  n.zoom > 1 ? n.moveBook("down") : n.prevPage();
                  break;
                case 107:
                case 187:
                  n.zoomIn();
                  break;
                case 109:
                case 189:
                  n.zoomOut();
              }
              return !1;
            }
          }),
          o.addEventListener("MSFullscreenChange", function (e) {
            n.handleFsChange();
          }),
          o.addEventListener("mozfullscreenchange", function (e) {
            n.handleFsChange();
          }),
          o.addEventListener("webkitfullscreenchange", function (e) {
            n.handleFsChange();
          }),
          o.addEventListener("fullscreenchange", function (e) {
            n.handleFsChange();
          }),
          i.lightboxCloseOnBack &&
            (t.onpopstate = function () {
              n.Book.enabled &&
                FLIPBOOK.lightboxOpened &&
                (t.location.hash || n.lightbox.closeLightbox(!0));
            }),
          (this.zoom = i.zoomMin),
          this.bookLayer.bind("DOMMouseScroll", function (e) {
            if (
              n.Book.enabled &&
              (n.options.lightBox ||
                n.fullscreenActive ||
                (!n.options.wheelDisabledNotFullscreen &&
                  !n.bodyHasVerticalScrollbar()))
            )
              return (
                e.stopPropagation(),
                e.preventDefault(),
                e.originalEvent.detail > 0
                  ? n.zoomOut(e.originalEvent)
                  : n.zoomIn(e.originalEvent),
                !1
              );
          }),
          this.bookLayer.bind("mousewheel", function (e) {
            if (
              n.Book.enabled &&
              (n.options.lightBox ||
                n.fullscreenActive ||
                (!n.options.wheelDisabledNotFullscreen &&
                  !n.bodyHasVerticalScrollbar()))
            )
              return (
                e.stopPropagation(),
                e.preventDefault(),
                e.originalEvent.wheelDelta < 0
                  ? n.zoomOut(e.originalEvent)
                  : n.zoomIn(e.originalEvent),
                !1
              );
          }),
          this.setTool("toolMove"),
          n.options.contentOnStart
            ? n.toggleToc(!0)
            : n.options.thumbnailsOnStart
            ? n.toggleThumbs(!0)
            : n.options.searchOnStart &&
              (n.toggleSearch(!0),
              "string" == typeof n.options.searchOnStart &&
                n.thumbs.$findInput
                  .val(n.options.searchOnStart)
                  .trigger("keyup")),
          i.autoplayOnStart && n.toggleAutoplay(!0),
          n.options.lightBox && n.Book.disable(),
          n.initColors(),
          setTimeout(function () {
            n.resize(), n.Book.updateVisiblePages(), n.Book.zoomTo(i.zoomMin);
          }, 500),
          i.onbookcreated && i.onbookcreated.call(this);
      },
      initSwipe: function () {
        if (1 != this.options.numPages && this.options.touchSwipeEnabled) {
          var e = this;
          t.jQuery(this.bookLayer).swipe({
            swipeStatus: function (t, o, i, n, s, a, r) {
              if ("start" == o)
                try {
                  e.currentPageInput.trigger("blur");
                } catch (t) {}
              if (
                !e.options.sideNavigationButtons ||
                (t.target !== e.arrowL[0] && t.target !== e.arrowR[0])
              )
                if (("end" == o || "cancel" == o) && s < 200 && n < 10) {
                  if (
                    "toolMove" == e.tool &&
                    !e.options.doubleClickZoomDisabled
                  )
                    if (null == e.clickTimer)
                      e.clickTimer = setTimeout(function () {
                        if (((e.clickTimer = null), "touchend" == t.type))
                          t.changedTouches[0].pageX;
                        else if ("mouseup" == t.type) t.offsetX;
                      }, 300);
                    else {
                      clearTimeout(e.clickTimer), (e.clickTimer = null);
                      var l = e.options.zoomTime;
                      e.zoom >= e.options.zoomMax
                        ? e.zoomTo(e.options.zoomMin, l, t)
                        : e.zoomTo(e.options.zoomMax, l, t);
                    }
                } else {
                  if (
                    (("up" == i || "down" == i) && "move" == o) ||
                    e.zoom > 1 ||
                    "toolSelect" == e.tool
                  )
                    return;
                  e.Book.onSwipe(t, o, i, n, s, a, r);
                }
            },
            pinchStatus: function (t, o, i, n, s, a, r) {
              "start" == o && (e.zoomStart = e.zoom),
                a > 1 &&
                  "move" == o &&
                  (t.preventDefault(),
                  t.scale && (r = t.scale),
                  e.zoomTo(e.zoomStart * r, 0, t));
            },
            fingers: 2,
            pinchThreshold: 0,
            allowPageScroll: "vertical",
            preventDefaultEvents: !1,
          }),
            (this.swipeEnabled = !0);
        }
      },
      toggleMenu: function () {
        this.menuShowing
          ? ((this.menuShowing = !1),
            this.bookLayer.css("bottom", "0px"),
            this.menuBottom.fadeOut(),
            this.currentPageHolder.fadeOut(),
            e(".flipbook-nav").fadeOut(),
            this.Book.onResize())
          : ((this.menuShowing = !0),
            this.bookLayer.css("bottom", this.menuBottom.height() + "px"),
            this.menuBottom.fadeIn(),
            this.currentPageHolder.fadeIn(),
            e(".flipbook-nav").fadeIn(),
            this.Book.onResize());
      },
      createIcon: function (t, i, n) {
        var s;
        return (
          (s =
            "material" == this.options.icons
              ? e("<i>")
                  .addClass(i ? t.iconAlt2 : t.icon2)
                  .addClass(
                    "material-icons flipbook-icon-material flipbook-menu-btn skin-color"
                  )
                  .attr("title", t.title)
                  .text(i ? t.iconAlt2 : t.icon2)
              : e(o.createElement("span"))
                  .attr("aria-hidden", "true")
                  .addClass(i ? t.iconAlt : t.icon)
                  .addClass(
                    "flipbook-icon-fa flipbook-menu-btn skin-color fa"
                  )),
          n || s.addClass("skin-color-bg"),
          s
        );
      },
      createButton: function (t) {
        var i = this.options,
          n =
            ("top" == t.vAlign && i.menu2Transparent) ||
            ("top" != t.vAlign && i.menuTransparent),
          s = t.background || (n ? i.floatingBtnBackground : i.btnBackground),
          a =
            t.backgroundHover ||
            (n ? i.floatingBtnBackgroundHover : i.btnBackgroundHover),
          r = t.color || (n ? i.floatingBtnColor : i.btnColor),
          l = t.colorHover || (n ? i.floatingBtnColorHover : i.btnColorHover),
          d = n ? i.floatingBtnTextShadow : i.btnTextShadow,
          h = t.radius || (n ? i.floatingBtnRadius : i.btnRadius),
          p = t.border || (n ? i.floatingBtnBorder : i.btnBorder),
          c = n ? i.floatingBtnMargin : i.btnMargin,
          u = e(o.createElement("span")),
          g = "material" == i.icons,
          f = g ? (t.size || i.btnSize) + 8 : t.size || i.btnSize,
          b = (t.size || i.btnSize) + 24;
        function m(e) {
          e.css({
            width: b + "px",
            "font-size": f + "px",
            margin: c + "px",
            "border-radius": h + "px",
            "text-shadow": i.btnTextShadow,
            "box-shadow": i.btnShadow,
            border: p,
            color: r,
            background: s,
            "text-shadow": d,
          }),
            r && e.removeClass("skin-color"),
            s && e.removeClass("skin-color-bg");
        }
        (u.$icon = this.createIcon(t).appendTo(u)),
          m(u.$icon),
          t.iconAlt2 &&
            ((u.$iconAlt = this.createIcon(t, !0).appendTo(u).hide()),
            m(u.$iconAlt)),
          (u.icon = t.icon),
          (u.iconAlt = t.iconAlt),
          g &&
            ((u.icon = t.icon2),
            (u.iconAlt = t.iconAlt2),
            (t.icon = t.icon2),
            (t.iconAlt = t.iconAlt2)),
          t.onclick &&
            u.bind("tap click", function (e) {
              t.onclick();
            }),
          (l || a) &&
            u
              .mouseenter(function () {
                u
                  .find("." + u.icon.replace("fas ", ""))
                  .css({ color: l, background: a }),
                  u.$iconAlt &&
                    u
                      .find("." + u.iconAlt.replace("fas ", ""))
                      .css({ color: l, background: a });
              })
              .mouseleave(function () {
                u
                  .find("." + u.icon.replace("fas ", ""))
                  .css({ color: r, background: s }),
                  u.$iconAlt &&
                    u
                      .find("." + u.iconAlt.replace("fas ", ""))
                      .css({ color: r, background: s });
              });
        var k;
        return (
          (k =
            "top" == t.vAlign
              ? i.menu2Floating
                ? this.menuTC
                : "left" == t.hAlign
                ? this.menuTL
                : "right" == t.hAlign
                ? this.menuTR
                : this.menuTC
              : i.menuFloating
              ? this.menuBC
              : "left" == t.hAlign
              ? this.menuBL
              : "right" == t.hAlign
              ? this.menuBR
              : this.menuBC),
          u
            .attr("data-name", t.name)
            .appendTo(k)
            .attr("title", t.title)
            .addClass("")
            .css("order", t.order),
          u
        );
      },
      createMenu: function () {
        if (!this.menuBottom) {
          var t = this.options,
            i = t.menuFloating
              ? "flipbook-menu-floating"
              : "flipbook-menu-fixed",
            n = t.menu2Floating
              ? "flipbook-menu-floating"
              : "flipbook-menu-fixed",
            s = this;
          (this.menuBottom = e(o.createElement("div"))
            .addClass("flipbook-menuBottom")
            .addClass(i)
            .appendTo(this.wrapper)
            .css({
              background: t.menuBackground,
              "box-shadow": t.menuShadow,
              margin: t.menuMargin + "px",
              padding: t.menuPadding + "px",
            })),
            t.menuTransparent ||
              t.menuBackground ||
              this.menuBottom.addClass("skin-color-bg"),
            t.hideMenu && this.menuBottom.hide(),
            (this.menuTop = e(o.createElement("div"))
              .addClass("flipbook-menuTop")
              .addClass(n)
              .appendTo(this.wrapper)
              .css({
                background: t.menu2Background,
                "box-shadow": t.menu2Shadow,
                margin: t.menu2Margin + "px",
                padding: t.menu2Padding + "px",
              })),
            t.menu2Transparent ||
              t.menu2Background ||
              this.menuTop.addClass("skin-color-bg"),
            "swipe" == t.viewMode && (t.btnSound.enabled = !1),
            (this.menuBL = e(o.createElement("div"))
              .addClass("flipbook-menu flipbook-menu-left")
              .appendTo(this.menuBottom)),
            (this.menuBC = e(o.createElement("div"))
              .addClass("flipbook-menu flipbook-menu-center")
              .appendTo(this.menuBottom)),
            (this.menuBR = e(o.createElement("div"))
              .addClass("flipbook-menu flipbook-menu-right")
              .appendTo(this.menuBottom)),
            (this.menuTL = e(o.createElement("div"))
              .addClass("flipbook-menu flipbook-menu-left")
              .appendTo(this.menuTop)),
            (this.menuTC = e(o.createElement("div"))
              .addClass("flipbook-menu flipbook-menu-center")
              .appendTo(this.menuTop)),
            (this.menuTR = e(o.createElement("div"))
              .addClass("flipbook-menu flipbook-menu-right")
              .appendTo(this.menuTop)),
            t.isMobile &&
              (void 0 !== t.btnTocIfMobile &&
                (t.btnToc.hideOnMobile = !t.btnTocIfMobile),
              void 0 !== t.btnThumbsIfMobile &&
                (t.btnThumbs.hideOnMobile = !t.btnThumbsIfMobile),
              void 0 !== t.btnShareIfMobile &&
                (t.btnShare.hideOnMobile = !t.btnShareIfMobile),
              void 0 !== t.btnDownloadPagesIfMobile &&
                (t.btnDownloadPages.hideOnMobile = !t.btnDownloadPagesIfMobile),
              void 0 !== t.btnDownloadPdfIfMobile &&
                (t.btnDownloadPdf.hideOnMobile = !t.btnDownloadPdfIfMobile),
              void 0 !== t.btnSoundIfMobile &&
                (t.btnSound.hideOnMobile = !t.btnSoundIfMobile),
              void 0 !== t.btnExpandIfMobile &&
                (t.btnExpand.hideOnMobile = !t.btnExpandIfMobile),
              void 0 !== t.btnPrintIfMobile &&
                (t.btnPrint.hideOnMobile = !t.btnPrintIfMobile)),
            t.sideNavigationButtons &&
              ((this.btnNext = e(
                '<div class="flipbook-nav"><div class="flipbook-arrow-wrapper"></div></div>'
              )
                .appendTo(this.bookLayer)
                .bind("tap click", function (e) {
                  s.btnNext.disabled ||
                    ((s.btnNext.disabled = !0),
                    setTimeout(function () {
                      s.btnNext.disabled = !1;
                    }, 300),
                    e.stopPropagation(),
                    e.preventDefault(),
                    s.nextPage());
                })),
              (this.arrowR = this.createIcon(t.btnNext)
                .appendTo(this.btnNext.first())
                .addClass("flipbook-right-arrow")
                .css({
                  width: t.sideBtnSize + "px",
                  height: t.sideBtnSize + "px",
                  "font-size": t.sideBtnSize + "px",
                  "border-radius": t.sideBtnRadius + "px",
                  "margin-top": String(-t.sideBtnSize / 2) + "px",
                  "margin-right": t.sideBtnMargin + "px",
                  padding: t.sideBtnPaddingV + "px " + t.sideBtnPaddingH + "px",
                  "text-shadow": t.sideBtnTextShadow,
                  "box-shadow": t.sideBtnShadow,
                  border: t.sideBtnBorder,
                  color: t.sideBtnColor,
                  background: t.sideBtnBackground,
                  "box-sizing": "initial",
                })),
              t.sideBtnColor && this.arrowR.removeClass("skin-color"),
              t.sideBtnBackground && this.arrowR.removeClass("skin-color-bg"),
              (this.btnPrev = e(
                '<div class="flipbook-nav"><div class="flipbook-arrow-wrapper"></div></div>'
              )
                .appendTo(s.bookLayer)
                .bind("tap click", function (e) {
                  s.btnPrev.disabled ||
                    ((s.btnPrev.disabled = !0),
                    setTimeout(function () {
                      s.btnPrev.disabled = !1;
                    }, 300),
                    e.stopPropagation(),
                    e.preventDefault(),
                    s.prevPage());
                })),
              (this.arrowL = this.createIcon(t.btnPrev)
                .appendTo(this.btnPrev.first())
                .addClass("flipbook-left-arrow")
                .css({
                  width: t.sideBtnSize + "px",
                  height: t.sideBtnSize + "px",
                  "font-size": t.sideBtnSize + "px",
                  "border-radius": t.sideBtnRadius + "px",
                  "margin-top": String(-t.sideBtnSize / 2) + "px",
                  "margin-left": t.sideBtnMargin + "px",
                  padding: t.sideBtnPaddingV + "px " + t.sideBtnPaddingH + "px",
                  "text-shadow": t.sideBtnTextShadow,
                  "box-shadow": t.sideBtnShadow,
                  border: t.sideBtnBorder,
                  color: t.sideBtnColor,
                  background: t.sideBtnBackground,
                  "box-sizing": "initial",
                })),
              t.sideBtnColor && this.arrowL.removeClass("skin-color"),
              t.sideBtnBackground && this.arrowL.removeClass("skin-color-bg"),
              t.btnFirst.enabled &&
                ((this.btnFirst = e(
                  '<div class="flipbook-nav"><div class="flipbook-arrow-wrapper"></div></div>'
                )
                  .appendTo(this.bookLayer)
                  .bind("tap click", function (e) {
                    s.btnFirst.disabled ||
                      ((s.btnFirst.disabled = !0),
                      setTimeout(function () {
                        s.btnFirst.disabled = !1;
                      }, 300),
                      e.stopPropagation(),
                      e.preventDefault(),
                      s.firstPage());
                  })),
                (this.arrowFirst = this.createIcon(t.btnFirst)
                  .appendTo(this.btnFirst.first())
                  .addClass("flipbook-first-arrow")
                  .css({
                    width: t.sideBtnSize + "px",
                    height: 0.66 * t.sideBtnSize + "px",
                    "font-size": 0.66 * t.sideBtnSize + "px",
                    "border-radius": t.sideBtnRadius + "px",
                    "margin-top":
                      String(
                        t.sideBtnSize / 2 +
                          t.sideBtnMargin +
                          2 * t.sideBtnPaddingV
                      ) + "px",
                    "margin-left": t.sideBtnMargin + "px",
                    padding:
                      t.sideBtnPaddingV + "px " + t.sideBtnPaddingH + "px",
                    "text-shadow": t.sideBtnTextShadow,
                    "box-shadow": t.sideBtnShadow,
                    border: t.sideBtnBorder,
                    color: t.sideBtnColor,
                    background: t.sideBtnBackground,
                    "box-sizing": "initial",
                  })),
                t.sideBtnColor && this.arrowFirst.removeClass("skin-color"),
                t.sideBtnBackground &&
                  this.arrowFirst.removeClass("skin-color-bg")),
              t.btnLast.enabled &&
                ((this.btnLast = e(
                  '<div class="flipbook-nav"><div class="flipbook-arrow-wrapper"></div></div>'
                )
                  .appendTo(s.bookLayer)
                  .bind("tap click", function (e) {
                    s.btnLast.disabled ||
                      ((s.btnLast.disabled = !0),
                      setTimeout(function () {
                        s.btnLast.disabled = !1;
                      }, 300),
                      e.stopPropagation(),
                      e.preventDefault(),
                      s.lastPage());
                  })),
                (this.arrowLast = this.createIcon(t.btnLast)
                  .appendTo(this.btnLast.first())
                  .addClass("flipbook-last-arrow")
                  .css({
                    width: t.sideBtnSize + "px",
                    height: 0.66 * t.sideBtnSize + "px",
                    "font-size": 0.66 * t.sideBtnSize + "px",
                    "border-radius": t.sideBtnRadius + "px",
                    "margin-top":
                      String(
                        t.sideBtnSize / 2 +
                          t.sideBtnMargin +
                          2 * t.sideBtnPaddingV
                      ) + "px",
                    "margin-right": t.sideBtnMargin + "px",
                    padding:
                      t.sideBtnPaddingV + "px " + t.sideBtnPaddingH + "px",
                    "text-shadow": t.sideBtnTextShadow,
                    "box-shadow": t.sideBtnShadow,
                    border: t.sideBtnBorder,
                    color: t.sideBtnColor,
                    background: t.sideBtnBackground,
                    "box-sizing": "initial",
                  })),
                t.sideBtnColor && this.arrowLast.removeClass("skin-color"),
                t.sideBtnBackground &&
                  this.arrowLast.removeClass("skin-color-bg")),
              t.btnOrder.indexOf("btnFirst") >= 0 &&
                t.btnOrder.splice(t.btnOrder.indexOf("btnFirst"), 1),
              t.btnOrder.indexOf("btnPrev") >= 0 &&
                t.btnOrder.splice(t.btnOrder.indexOf("btnPrev"), 1),
              t.btnOrder.indexOf("btnNext") >= 0 &&
                t.btnOrder.splice(t.btnOrder.indexOf("btnNext"), 1),
              t.btnOrder.indexOf("btnLast") >= 0 &&
                t.btnOrder.splice(t.btnOrder.indexOf("btnLast"), 1)),
            t.pdfMode &&
              !t.btnDownloadPdf.url &&
              (t.btnDownloadPdf.url = t.pdfUrl),
            !t.textLayer && t.btnSelect && (t.btnSelect.enabled = !1);
          for (var a = 0; a < t.btnOrder.length; a++) {
            var r = t.btnOrder[a],
              l = t[r];
            t.isMobile && l.hideOnMobile && (l.enabled = !1),
              l.enabled &&
                ((l.name = r),
                "currentPage" == l.name
                  ? this.createCurrentPage()
                  : (this[r] = this.createButton(l).bind(
                      "touchend click",
                      function (e) {
                        e.stopPropagation(),
                          e.preventDefault(),
                          s.onButtonClick(this, e);
                      }
                    )));
          }
          if (t.buttons)
            for (a = 0; a < t.buttons.length; a++) {
              l = t.buttons[a];
              s.createButton(l).index(1);
            }
        }
      },
      onButtonClick: function (i, n) {
        var s = e(i).attr("data-name"),
          a = this.options;
        switch (s) {
          case "btnFirst":
            this.firstPage();
            break;
          case "btnPrev":
            this.prevPage();
            break;
          case "btnNext":
            this.nextPage();
            break;
          case "btnLast":
            this.lastPage();
            break;
          case "btnZoomIn":
            this.zoomIn();
            break;
          case "btnZoomOut":
            this.zoomOut();
            break;
          case "btnAutoplay":
            this.autoplay || this.nextPage(), this.toggleAutoplay();
            break;
          case "btnSearch":
            this.toggleSearch();
            break;
          case "btnBookmark":
            this.toggleBookmark();
            break;
          case "btnRotateLeft":
            this.Book.rotateLeft && this.Book.rotateLeft();
            break;
          case "btnRotateRight":
            this.Book.rotateRight && this.Book.rotateRight();
            break;
          case "btnToc":
            this.toggleToc();
            break;
          case "btnThumbs":
            this.toggleThumbs();
            break;
          case "btnShare":
            this.toggleShareMenu();
            break;
          case "btnDownloadPages":
            if (a.downloadMenu) this.toggleDownloadMenu();
            else {
              var r = o.createElement("a");
              (r.href = a.btnDownloadPages.url),
                (r.download = a.btnDownloadPages.name),
                r.dispatchEvent(new MouseEvent("click"));
            }
            break;
          case "btnPrint":
            a.printMenu ? this.togglePrintMenu() : this.togglePrintWindow();
            break;
          case "btnDownloadPdf":
            if (a.btnDownloadPdf.forceDownload) {
              var l = a.btnDownloadPdf.url,
                d = o.createElement("a");
              d.href = l;
              var h = d.href.split("/").pop().split("#")[0].split("?")[0];
              (d.download = h),
                o.body.appendChild(d),
                d.click(),
                o.body.removeChild(d);
            } else {
              var p =
                a.btnDownloadPdf.openInNewWindow ||
                (a.btnDownloadPdf.openInNewWindow, 1)
                  ? "_blank"
                  : "_self";
              t.open(a.btnDownloadPdf.url, p);
            }
            this.gaCode &&
              ga("send", {
                hitType: "event",
                eventCategory: "Flipbook : " + a.name,
                eventAction: "download PDF",
                eventLabel: a.btnDownloadPdf.url,
                nonInteraction: !0,
              });
            break;
          case "btnSound":
            this.toggleSound();
            break;
          case "btnSelect":
            this.toggleTool();
            break;
          case "btnExpand":
            this.toggleExpand();
            break;
          case "btnClose":
            this.lightbox.closeLightbox();
        }
      },
      handleFsChange: function (t) {
        if (this.Book && this.Book.enabled) {
          var i = e(this.fullscreenElement);
          (o.fullscreenElement ||
            o.webkitFullscreenElement ||
            o.mozFullScreenElement ||
            o.msFullscreenElement) === this.fullscreenElement ||
          this.isFullscreen
            ? (i.addClass("flipbook-browser-fullscreen"),
              (this.fullscreenActive = !0),
              this.options.onfullscreenenter &&
                this.options.onfullscreenenter.call(this))
            : (i.removeClass("flipbook-browser-fullscreen"),
              (this.fullscreenActive = !1),
              this.options.onfullscreenexit &&
                this.options.onfullscreenexit.call(this)),
            this.triggerResizeOnce(),
            this.toggleIcon(this.btnExpand, !this.fullscreenActive);
        }
      },
      createLogo: function () {
        var o = this.options;
        if (o.logoImg && (!o.isMobile || !o.logoHideOnMobile)) {
          var i = e("<img>")
            .attr("src", o.logoImg)
            .attr("style", o.logoCSS)
            .appendTo(this.wrapper);
          "right" == o.logoAlignH && i.css("right", "0"),
            "bottom" == o.logoAlignV && i.css("bottom", "0"),
            o.logoUrl &&
              i.bind("touchend click", function () {
                t.open(o.logoUrl, "_blank");
              });
        }
      },
      setLoadingProgress: function (t) {
        this.disposed ||
          (this.$fillPreloader
            ? this.setFillPreloaderProgress(t)
            : t > 0 && t < 1
            ? e(this.preloader).stop(!0, !0).show()
            : e(this.preloader).stop(!0, !0).hide());
      },
      setFillPreloaderProgress: function (e) {
        if (this.$fillPreloader)
          if (e > 0 && e < 1) {
            if (
              ((this.fillPreloaderProgress = this.fillPreloaderProgress || 0),
              e < this.fillPreloaderProgress)
            )
              return;
            this.fillPreloaderProgress = e;
            var t = this.$fillPreloaderImg[0];
            (t.style.clip =
              "rect(0px," + t.width * e + "px," + t.height + "px,0px)"),
              this.$fillPreloader.show();
          } else this.$fillPreloader.hide();
      },
      createNavigation: function () {
        var t = this;
        (this.navLeft = e("<div />")),
          this.navLeft
            .css("background", "#f00")
            .css("left", "0")
            .css("top", "200px")
            .attr("aria-hidden", "true")
            .addClass("skin-color fa fa-chevron-left fa-5x")
            .css("margin-top", this.navLeft.height() + "px")
            .bind("touchend click", function (e) {
              e.stopPropagation(), e.preventDefault(), t.prevPage();
            }),
          (this.navRight = e("<div />")
            .appendTo(this.bookLayer)
            .css("position", "absolute")
            .css("width", "200px")
            .css("height", "200px")
            .css("margin-top", "-100px")
            .css("background", "#f00")
            .css("right", "0")
            .css("top", "200px")
            .bind("touchend click", function (e) {
              e.stopPropagation(), e.preventDefault(), t.nextPage();
            }));
      },
      playFlipSound: function () {
        var e = this;
        this.options.sound &&
          this.Book.enabled &&
          void 0 !== this.flipsound.play &&
          ((this.flipsound.currentTime = 0),
          setTimeout(function () {
            try {
              e.flipsound.play();
            } catch (e) {}
          }, 100));
      },
      onMouseWheel: function (e) {
        if ("wheelDeltaX" in e)
          (wheelDeltaX = e.wheelDeltaX / 12),
            (wheelDeltaY = e.wheelDeltaY / 12);
        else if ("wheelDelta" in e)
          wheelDeltaX = wheelDeltaY = e.wheelDelta / 12;
        else {
          if (!("detail" in e)) return;
          wheelDeltaX = wheelDeltaY = 3 * -e.detail;
        }
        wheelDeltaX > 0 ? this.zoomIn(e) : this.zoomOut(e);
      },
      zoomTo: function (e, t, o) {
        var i, n;
        (this.zoom = e),
          void 0 === o
            ? ((i = this.model.wrapperW / 2), (n = this.model.wrapperH / 2))
            : (o.touches && o.touches[0]
                ? ((i = o.touches[0].pageX), (n = o.touches[0].pageY))
                : o.changedTouches && o.changedTouches[0]
                ? ((i = o.changedTouches[0].pageX),
                  (n = o.changedTouches[0].pageY))
                : ((i = o.pageX), (n = o.pageY)),
              (i -= this.wrapper.offset().left),
              (n -= this.wrapper.offset().top)),
          this.zoom < this.options.zoomMin &&
            (this.zoom = this.options.zoomMin),
          this.zoom > this.options.zoomMax &&
            (this.zoom = this.options.zoomMax),
          this.options.zoomMax2 &&
            this.zoom > this.options.zoomMax2 &&
            (this.zoom = this.options.zoomMax2),
          (this.model.zoom = this.zoom),
          this.Book.zoomTo(this.zoom, t, i, n),
          this.onZoom(this.zoom);
      },
      zoomOut: function (e) {
        var t = this.zoom / this.options.zoomStep;
        if (
          (t < 1 && this.zoom > 1 && (t = 1),
          (t = t < this.options.zoomMin ? this.options.zoomMin : t),
          this.zoom != t)
        ) {
          this.zoom = t;
          var o = this.options.zoomTime;
          this.zoomTo(this.zoom, o, e);
        }
      },
      zoomIn: function (e) {
        var t = this.zoom * this.options.zoomStep;
        if (
          (t > 1 && this.zoom < 1 && (t = 1),
          this.bookLayer.height() * t > this.options.zoomSize &&
            (t = this.options.zoomSize / this.bookLayer.height()),
          this.zoom != t)
        ) {
          this.zoom = t;
          var o = this.options.zoomTime;
          this.zoomTo(this.zoom, o, e);
        }
      },
      nextPage: function () {
        this.Book && this.Book.nextPage();
      },
      prevPage: function () {
        this.Book && this.Book.prevPage();
      },
      firstPage: function () {
        this.goToPage(1);
      },
      lastPage: function () {
        this.goToPage(this.options.pages.length);
      },
      goToPage: function (e, t) {
        e < 1
          ? (e = 1)
          : e > this.options.numPages &&
            !this.options.rightToLeft &&
            (e = this.options.numPages),
          this.Book && this.Book.goToPage(e, t);
      },
      moveBook: function (e) {
        this.Book && this.Book.move && this.Book.move(e);
      },
      onZoom: function (e) {
        (this.zoom = e),
          this.enableButton(this.btnZoomIn, e < this.options.zoomMax),
          this.enableButton(this.btnZoomOut, e > this.options.zoomMin),
          this.enableSwipe(e <= 1),
          (this.model.zoom = e);
      },
      enableSwipe: function (e) {
        this.swipeEnabled = e;
      },
      createCurrentPage: function () {
        var t,
          i = this,
          n = this.options,
          s = "flipbook-currentPageHolder ";
        t =
          "top" == n.currentPage.vAlign
            ? "left" == n.currentPage.hAlign
              ? this.menuTL
              : "right" == n.currentPage.hAlign
              ? this.menuTR
              : this.menuTC
            : "left" == n.currentPage.hAlign
            ? this.menuBL
            : "right" == n.currentPage.hAlign
            ? this.menuBR
            : this.menuBC;
        var a =
            ("top" == n.currentPage.vAlign && n.menu2Transparent) ||
            ("top" != n.currentPage.vAlign && n.menuTransparent),
          r = a ? n.floatingBtnBackground : "",
          l = a ? n.floatingBtnColor : n.btnColor,
          d = a ? n.floatingBtnTextShadow : "",
          h = a ? n.floatingBtnRadius : n.btnRadius,
          p = (a ? n.floatingBtnMargin : n.btnMargin, e("<div>").appendTo(t));
        p.css(
          "margin",
          n.currentPage.marginV + "px " + n.currentPage.marginH + "px"
        ),
          a || (s += "skin-color "),
          p
            .addClass(s)
            .css({
              color: l,
              background: r,
              "text-shadow": d,
              "border-radius": h + "px",
            }),
          n.currentPage.order && p.css("order", n.currentPage.order),
          (this.currentPageHolder = p),
          (this.currentPage = e(o.createElement("div"))
            .addClass("flipbook-currentPageNumber")
            .appendTo(p));
        var c = e("<form>")
          .appendTo(p)
          .submit(function (e) {
            var t = parseInt(i.currentPageInput.val());
            return (
              (t = t > n.pages.length ? n.pages.length : t),
              i.options.rightToLeft && (t = n.pages.length - t + 1),
              i.goToPage(t),
              i.currentPageInput.trigger("blur"),
              !1
            );
          });
        (this.currentPageInput = e('<input type="text" maxlength="4">')
          .addClass("flipbook-currentPageInput")
          .css({
            margin:
              n.currentPage.marginV + "px " + n.currentPage.marginH + "px",
            color: l,
          })
          .appendTo(c)
          .val("")
          .focus(function () {
            i.currentPageInput.val(""),
              i.currentPage.addClass("flipbook-color-transparent");
          })
          .blur(function () {
            i.currentPageInput.val(""),
              i.currentPage.removeClass("flipbook-color-transparent");
          })),
          a || this.currentPageInput.addClass("skin-color");
      },
      createMenuHeader: function (t, o, i) {
        var n = this,
          s = e("<div>")
            .addClass("flipbook-menu-header skin-clor flipbook-font")
            .appendTo(t),
          a =
            ((o = e("<span>")
              .text(o)
              .addClass("flipbook-menu-title skin-color")
              .appendTo(s)),
            e("<span>")
              .appendTo(s)
              .addClass("flipbook-btn-close")
              .bind("touchend click", function (e) {
                e.stopPropagation(), e.preventDefault(), n.closeMenus();
              }));
        this.createIcon(this.options.btnClose, null, !0).appendTo(a);
      },
      createToc: function () {
        var t = this,
          o = this.options.tableOfContent;
        if (
          (o && o.length) ||
          !this.pdfService ||
          this.pdfService.outlineLoaded
        ) {
          if (
            ((this.tocHolder = e("<div>")
              .addClass("flipbook-tocHolder flipbook-side-menu skin-color-bg")
              .appendTo(this.wrapper)
              .css(this.options.sideMenuPosition, "0")
              .hide()),
            this.createMenuHeader(
              this.tocHolder,
              this.strings.tableOfContent,
              this.toggleToc
            ),
            (this.toc = e("<div>")
              .addClass("flipbook-toc")
              .appendTo(this.tocHolder)),
            (this.tocScroller = e("<div>")
              .addClass("flipbook-toc-scroller")
              .appendTo(this.toc)),
            (this.tocScroll = new FLIPBOOK.IScroll(t.toc[0], {
              bounce: !1,
              mouseWheel: !0,
              scrollbars: !0,
              interactiveScrollbars: !0,
            })),
            o && o.length > 0)
          ) {
            this.options.pages;
            for (var i = 0; i < o.length; i++) this.createTocItem(o[i]);
          } else {
            var n = this.options.pages;
            for (i = 0; i < n.length; i++) {
              var s = n[i].title;
              if ("" != s && void 0 !== s) {
                var a = { title: s, page: String(i + 1) };
                this.createTocItem(a);
              }
            }
          }
          this.initColors(),
            this.tocScroll.refresh(),
            (this.tocCreated = !0),
            this.toggleToc();
        } else
          t.pdfService.loadOutline(function (e) {
            t.options.tableOfContent = e;
            var o = new EventBus(),
              i = {
                scrollPageIntoView: function (e) {
                  var t = e.pageNumber,
                    o = $annotations[processingAnnotationIndex];
                  o &&
                    ((o.dataset.page = t),
                    processingAnnotationIndex++,
                    processAnotations());
                },
              };
            new PDFLinkService({ eventBus: o }).setViewer(i), t.createToc();
          });
      },
      createTocItem: function (t, i, n) {
        var s = this,
          a = ((i = i || this.tocScroller), this.options.rightToLeft),
          r = e(o.createElement("a"))
            .attr("class", "flipbook-tocItem")
            .addClass("skin-color")
            .css("direction", a ? "rtl" : "ltr")
            .appendTo(i)
            .bind("touchend click", function (e) {
              if ((e.stopPropagation(), e.preventDefault(), !s.tocScroll.moved))
                if (
                  (s.options.tableOfContentCloseOnClick && s.toggleToc(!1),
                  !t.page && t.dest)
                ) {
                  function o(e) {
                    s.pdfService.pdfDocument
                      .getPageIndex(e[0])
                      .then(function (e) {
                        var t = e + 1;
                        (t = s.options.rightToLeft
                          ? s.options.pages.length - t + 1
                          : t),
                          setTimeout(function () {
                            s.goToPage(t);
                          }, 200);
                      });
                  }
                  "string" == typeof t.dest
                    ? s.pdfService.pdfDocument
                        .getDestination(t.dest)
                        .then(function (e) {
                          o(e);
                        })
                    : o(t.dest);
                } else {
                  var i = Number(t.page);
                  (i = s.options.rightToLeft
                    ? s.options.pages.length - i + 1
                    : i),
                    setTimeout(function () {
                      s.goToPage(i);
                    }, 200);
                }
            });
        n || (n = 0),
          (r.level = n),
          r.css("padding", "8px 0"),
          r.css("margin-" + (a ? "right" : "left"), "10px"),
          n
            ? (r.css("margin-top", "8px"), r.css("padding-bottom", "0"))
            : (r.css("margin-right", "15px"), r.css("padding-left", "10px"));
        var l = e(o.createElement("span"))
            .appendTo(r)
            .css("width", "20px")
            .css("display", "inline-block")
            .css("cursor", "auto")
            .bind("touchend click", function (e) {
              e.stopPropagation(), e.preventDefault();
              for (var t = 0; t < r.items.length; t++) r.items[t].toggle();
              d.toggle(), h.toggle(), s.tocScroll.refresh();
            }),
          d = e("<span>")
            .attr("aria-hidden", "true")
            .appendTo(l)
            .addClass("fa fa-chevron-" + (a ? "left" : "right") + " skin-color")
            .hide(),
          h = e("<span>")
            .attr("aria-hidden", "true")
            .appendTo(l)
            .addClass("fa fa-chevron-down skin-color")
            .hide();
        if (
          (e(o.createElement("span"))
            .appendTo(r)
            .addClass("title")
            .text(t.title)
            .css("width", String(170 - 10 * r.level) + "px"),
          e(o.createElement("span"))
            .appendTo(r)
            .width("25px")
            .css("display", "inline-block")
            .css("text-align", "right")
            .text(t.page),
          t.items && t.items.length)
        ) {
          r.items = [];
          for (var p = 0; p < t.items.length; p++) {
            var c = this.createTocItem(t.items[p], r, r.level + 1);
            r.items.push(c), c.hide();
          }
          d.show();
        }
        return r;
      },
      enablePrev: function (e) {
        this.enableButton(this.btnPrev, e),
          this.enableButton(this.btnFirst, e),
          this.Book.enablePrev(e);
      },
      enableNext: function (e) {
        this.enableButton(this.btnNext, e),
          this.enableButton(this.btnLast, e),
          this.Book.enableNext(e);
      },
      enableButton: function (e, t) {
        void 0 !== e &&
          (t
            ? (e.css("opacity", "1"), e.css("pointer-events", "auto"))
            : (e.css("opacity", "0.2"), e.css("pointer-events", "none")),
          (e.enabled = t));
      },
      resize: function () {
        var e = this.model;
        if (
          ((e.wrapperW = this.bookLayer.width()),
          (e.wrapperH = this.bookLayer.height()),
          this.Book && this.Book.enabled)
        ) {
          var t = this.options;
          !t.menuOverBook && this.menuShowing && this.menuBottom
            ? this.bookLayer.css("bottom", this.menuBottom.outerHeight() + "px")
            : this.bookLayer.css("bottom", "0px"),
            !t.menu2OverBook && this.menuShowing && this.menuTop
              ? this.bookLayer.css("top", this.menuTop.outerHeight() + "px")
              : this.bookLayer.css("top", "0px"),
            this.tocShowing ||
            this.thumbsShowing ||
            this.searchShowing ||
            this.bookmarkShowing
              ? (t.sideMenuOverBook ||
                  this.bookLayer.css(this.options.sideMenuPosition, "250px"),
                this.options.sideMenuOverMenu ||
                  this.wrapper
                    .find(".flipbook-side-menu")
                    .css("bottom", this.menuBottom.outerHeight() + "px"),
                this.options.sideMenuOverMenu2 ||
                  this.wrapper
                    .find(".flipbook-side-menu")
                    .css("top", this.menuTop.outerHeight() + "px"))
              : this.bookLayer.css(this.options.sideMenuPosition, "0px"),
            (t.zoomMax = t.zoomSize / e.wrapperH),
            (e.zoom = t.zoomMin),
            this.Book.onResize(),
            this.options.zoomReset && this.Book.zoomTo(this.options.zoomMin);
        }
      },
      pdfResize: function () {
        this.Book.onZoom();
      },
      createThumbs: function () {
        this.thumbs = new FLIPBOOK.Thumbnails(this);
      },
      toggleThumbs: function (e) {
        this.thumbs || this.createThumbs(),
          void 0 !== e && (this.thumbsShowing = !e),
          this.thumbsShowing
            ? (this.thumbs.hide(), (this.thumbsShowing = !1))
            : (this.closeMenus(),
              this.thumbs.show(),
              (this.thumbsShowing = !0)),
          this.resize();
      },
      toggleToc: function (e) {
        this.tocCreated
          ? (!this.tocShowing || e
              ? (this.closeMenus(),
                (this.tocShowing = !0),
                this.tocHolder.show(),
                this.tocScroll.refresh())
              : (this.tocHolder.hide(), (this.tocShowing = !1)),
            this.resize())
          : this.createToc();
      },
      toggleSearch: function (e) {
        this.thumbs || this.createThumbs(),
          void 0 !== e && (this.searchShowing = !e),
          this.searchShowing
            ? (this.thumbs.hide(), (this.searchShowing = !1), this.unmark())
            : (this.closeMenus(),
              this.thumbs.show(),
              this.thumbs.showSearch(),
              (this.searchShowing = !0)),
          this.resize();
      },
      toggleBookmark: function (e) {
        this.thumbs || this.createThumbs(),
          void 0 !== e && (this.bookmarkShowing = !e),
          this.bookmarkShowing
            ? (this.thumbs.hide(), (this.bookmarkShowing = !1))
            : (this.closeMenus(),
              this.thumbs.show(),
              this.thumbs.showBookmarks(),
              (this.bookmarkShowing = !0)),
          this.resize();
      },
      closeMenus: function () {
        this.thumbsShowing && this.toggleThumbs(),
          this.tocShowing && this.toggleToc(),
          this.searchShowing && this.toggleSearch(),
          this.bookmarkShowing && this.toggleBookmark(),
          this.printMenuShowing && this.togglePrintMenu(),
          this.dlMenuShowing && this.toggleDownloadMenu(),
          this.shareMenuShowing && this.toggleShareMenu(),
          this.passwordMenuShowing && this.togglePasswordMenu();
      },
      togglePrintMenu: function () {
        var t = this;
        if (this.printMenu)
          this.printMenuShowing
            ? (this.printMenu.hide(), (this.printMenuShowing = !1))
            : (this.closeMenus(),
              this.printMenu.show(),
              (this.printMenuShowing = !0),
              this.updateCurrentPage());
        else {
          this.printMenu = e(
            '<div class="flipbook-sub-menu flipbook-font">'
          ).appendTo(this.wrapper);
          var o = e('<idv class="flipbook-sub-menu-center">').appendTo(
              this.printMenu
            ),
            i = e(
              '<idv class="flipbook-sub-menu-content skin-color-bg">'
            ).appendTo(o);
          this.createMenuHeader(i, this.strings.print, this.togglePrintMenu);
          e(
            '<a><div class="c-p skin-color flipbook-btn">' +
              this.strings.printCurrentPage +
              "</div></a>"
          )
            .appendTo(i)
            .bind("touchend click", function (e) {
              t.printPage(t.cPage[0], this);
            }),
            e(
              '<a><div class="c-l-p skin-color flipbook-btn">' +
                this.strings.printLeftPage +
                "</div></a>"
            )
              .appendTo(this.printMenu)
              .appendTo(i)
              .bind("touchend click", function (e) {
                t.printPage(t.cPage[0], this);
              }),
            e(
              '<a><div class="c-r-p skin-color flipbook-btn">' +
                this.strings.printRightPage +
                "</div></a>"
            )
              .appendTo(this.printMenu)
              .appendTo(i)
              .bind("touchend click", function (e) {
                t.printPage(t.cPage[1], this);
              }),
            e(
              '<a><div class="skin-color flipbook-btn">' +
                this.strings.printAllPages +
                "</div></a>"
            )
              .appendTo(i)
              .bind("touchend click", function (e) {
                t.togglePrintWindow();
              });
          this.closeMenus(),
            (this.printMenuShowing = !0),
            this.initColors(),
            this.updateCurrentPage();
        }
      },
      toggleDownloadMenu: function () {
        var t = this;
        if (this.dlMenu)
          this.dlMenuShowing
            ? (this.dlMenu.hide(), (this.dlMenuShowing = !1))
            : (this.dlMenu.show(),
              this.closeMenus(),
              (this.dlMenuShowing = !0),
              this.updateCurrentPage());
        else {
          this.dlMenu = e(
            '<div class="flipbook-sub-menu flipbook-font">'
          ).appendTo(this.wrapper);
          var i = e('<idv class="flipbook-sub-menu-center">').appendTo(
              this.dlMenu
            ),
            n = e(
              '<idv class="flipbook-sub-menu-content skin-color-bg">'
            ).appendTo(i);
          this.createMenuHeader(
            n,
            this.strings.download,
            this.toggleDownloadMenu
          );
          e(
            '<a><div class="c-p skin-color flipbook-btn">' +
              this.strings.downloadCurrentPage +
              "</div></a>"
          )
            .appendTo(n)
            .bind("touchend click", function (e) {
              t.downloadPage(t.cPage[0], this);
            }),
            e(
              '<a><div class="c-l-p skin-color flipbook-btn">' +
                this.strings.downloadLeftPage +
                "</div></a>"
            )
              .appendTo(n)
              .bind("touchend click", function (e) {
                t.downloadPage(t.cPage[0], this);
              }),
            e(
              '<a><div class="c-r-p skin-color flipbook-btn">' +
                this.strings.downloadRightPage +
                "</div></a>"
            )
              .appendTo(n)
              .bind("touchend click", function (e) {
                t.downloadPage(t.cPage[1], this);
              }),
            e(
              '<a><div class="skin-color flipbook-btn">' +
                this.strings.downloadAllPages +
                "</div></a>"
            )
              .appendTo(n)
              .bind("touchend click", function (e) {
                var i = o.createElement("a");
                i.href = t.options.btnDownloadPages.url;
                var n = i.href.split("/").pop().split("#")[0].split("?")[0];
                (i.download = n), i.dispatchEvent(new MouseEvent("click"));
              });
          this.closeMenus(),
            (this.dlMenuShowing = !0),
            this.initColors(),
            this.updateCurrentPage();
        }
      },
      toggleShareMenu: function () {
        if (this.shareMenu)
          this.shareMenuShowing
            ? (this.shareMenu.hide(), (this.shareMenuShowing = !1))
            : (this.shareMenu.show(),
              this.closeMenus(),
              (this.shareMenuShowing = !0));
        else {
          this.shareMenu = e(
            '<div class="flipbook-sub-menu flipbook-font">'
          ).appendTo(this.wrapper);
          var t = e('<idv class="flipbook-sub-menu-center">').appendTo(
              this.shareMenu
            ),
            o = e(
              '<idv class="flipbook-sub-menu-content skin-color-bg">'
            ).appendTo(t);
          this.createMenuHeader(
            o,
            this.options.strings.share,
            this.toggleShareMenu
          );
          var i = e('<idv class="flipbook-share">').appendTo(o),
            n = this.options;
          (this.share = new Share(i[0], {
            networks: {
              twitter: n.twitter,
              facebook: n.facebook,
              pinterest: n.pinterest,
              email: n.email,
            },
          })),
            this.closeMenus(),
            (this.shareMenuShowing = !0),
            this.initColors();
        }
      },
      bookmarkPage: function (e) {
        var t = this.getBookmarkedPages();
        t.indexOf(String(e)) < 0 && t.push(e),
          this.setBookmarkedPages(t),
          this.thumbs.showBookmarkedThumbs(),
          this.bookmarkShowing || this.toggleBookmark();
      },
      removeBookmark: function (e) {
        var t = this.getBookmarkedPages();
        t.indexOf(String(e)) > -1 && t.splice(t.indexOf(String(e)), 1),
          this.setBookmarkedPages(t),
          this.thumbs.showBookmarkedThumbs(),
          this.bookmarkShowing || this.toggleBookmark();
      },
      isBookmarked: function (e) {
        return this.getBookmarkedPages().indexOf(String(e)) > 0;
      },
      getBookmarkedPages: function () {
        var e = localStorage.getItem(this.options.name + "_flipbook_bookmarks");
        return e ? e.split(";") : [];
      },
      setBookmarkedPages: function (e) {
        localStorage.setItem(
          this.options.name + "_flipbook_bookmarks",
          e.join(";")
        );
      },
      printPage: function (e, o) {
        var i;
        if (
          (this.options.pages[e] && this.options.pages[e].print
            ? (i = this.options.pages[e].print)
            : this.options.pages[e] &&
              this.options.pages[e].canvas &&
              this.options.pages[e].canvas[this.options.pageTextureSize]
            ? (i =
                this.options.pages[e].canvas[
                  this.options.pageTextureSize
                ].toDataURL())
            : this.options.pages[e] &&
              this.options.pages[e].src &&
              (i = this.options.pages[e].src),
          i)
        ) {
          var n = "<!DOCTYPE html>";
          (n += "<html>"),
            (n += "<head><title>Print canvas</title></head>"),
            (n += "<body>"),
            (n += '<img src="' + i + '">'),
            (n += "</body>"),
            (n += "</html>");
          var s = t.open("", "Print", "height=1600,width=800");
          s.document.open(),
            s.document.write(n),
            s.document.close(),
            s.document.addEventListener(
              "load",
              function () {
                s.focus(), s.print(), s.document.close(), s.close();
              },
              !0
            );
        } else {
          var a = this;
          this.loadPage(e, this.options.pageTextureSize, function () {
            a.printPage(e);
          });
        }
      },
      downloadPage: function (e) {
        var t;
        if (this.options.pages[e] && this.options.pages[e].download)
          t = this.options.pages[e].download;
        else if (this.options.pages[e] && this.options.pages[e].src)
          t = this.options.pages[e].src;
        else if (
          this.options.pages[e] &&
          this.options.pages[e].canvas &&
          this.options.pages[e].canvas[this.options.pageTextureSize]
        ) {
          var i = o.createElement("canvas"),
            n = this.options.pageWidth / this.options.pageHeight;
          (i.width = this.options.pageTextureSize * n),
            (i.height = this.options.pageTextureSize),
            i
              .getContext("2d")
              .drawImage(
                this.options.pages[e].canvas[this.options.pageTextureSize],
                0,
                0
              ),
            (t = i.toDataURL("image/jpeg", 0.5));
        }
        if (t) {
          var s = o.createElement("a");
          (s.href = t),
            (s.download = "page" + String(e + 1)),
            o.body.appendChild(s),
            s.click(),
            o.body.removeChild(s);
        } else {
          var a = this;
          this.loadPage(e, this.options.pageTextureSize, function () {
            a.downloadPage(e);
          });
        }
      },
      printPdf: function (e) {
        if (this.options.isMobile) {
          t.open(
            e,
            "_blank",
            "directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar=0"
          ).onload = function () {
            (this.document.body.children[0].style.display = "none"),
              this.print();
          };
        } else {
          var i = this._printIframe;
          this._printIframe ||
            ((i = this._printIframe = o.createElement("iframe")),
            o.body.appendChild(i),
            (i.style.display = "none"),
            (i.onload = function () {
              setTimeout(function () {
                i.focus(), i.contentWindow.print();
              }, 1);
            })),
            (i.src = e);
        }
      },
      togglePrintWindow: function (e) {
        var o;
        (o = this).options.printPdfUrl
          ? o.printPdf(o.options.printPdfUrl)
          : o.options.pdfUrl
          ? o.printPdf(o.options.pdfUrl)
          : i();
        function i() {
          link = "about:blank";
          var e = t.open(link, "_new");
          e.document.open();
          for (var i = "", n = 0; n < o.options.pages.length; n++)
            o.options.pages[n].src &&
              (i += '<img src="' + o.options.pages[n].src.toString() + '"/>\n');
          var s = (function (e) {
            return (
              "<html>\n<head>\n<title>Temporary Printing Window</title>\n<script>\nfunction step1() {\n  setTimeout('step2()', 10);\n}\nfunction step2() {\n  window.print();\n  window.close();\n}\n</script>\n</head>\n<body onLoad='step1()'>\n" +
              e +
              "</body>\n</html>\n"
            );
          })(i);
          e.document.write(s), e.document.close();
        }
      },
      thumbsVertical: function () {
        this.thumbsCreated &&
          ((this.thumbScroll.hScroll = !1),
          (this.thumbScroll.vScroll = !0),
          this.thumbScroll.refresh());
      },
      toggleExpand: function (e) {
        (this.browserFullscreen = !0),
          screenfull.enabled
            ? screenfull.toggle(this.fullscreenElement)
            : ((this.isFullscreen = !this.isFullscreen), this.handleFsChange());
      },
      expand: function () {},
      toggleAutoplay: function (e) {
        var t = this;
        (this.autoplay = e || !this.autoplay),
          this.autoplay
            ? (this.autoplayTimer = setInterval(function () {
                if (t.autoplay) {
                  var e = t.options.autoplayStartPage || 1;
                  t.options.rightToLeft
                    ? t.Book.prevEnabled
                      ? t.prevPage()
                      : t.options.autoplayLoop &&
                        t.goToPage(t.options.pages.length - e + 1)
                    : t.Book.nextEnabled
                    ? t.nextPage()
                    : t.options.autoplayLoop && t.goToPage(e);
                }
              }, t.options.autoplayInterval))
            : clearInterval(t.autoplayTimer),
          this.toggleIcon(this.btnAutoplay, !this.autoplay);
      },
      triggerResizeOnce: function () {
        setTimeout(function () {
          e(t).trigger("resize");
        }, 100),
          setTimeout(function () {
            e(t).trigger("resize");
          }, 500);
      },
      triggerResize: function () {
        setTimeout(function () {
          e(t).trigger("resize");
        }, 100),
          setTimeout(function () {
            e(t).trigger("resize");
          }, 500),
          setTimeout(function () {
            e(t).trigger("resize");
          }, 2e3);
      },
      initEasing: function () {
        t.jQuery.extend(t.jQuery.easing, {
          def: "easeOutQuad",
          swing: function (t, o, i, n, s) {
            return e.easing[e.easing.def](t, o, i, n, s);
          },
          easeInQuad: function (e, t, o, i, n) {
            return i * (t /= n) * t + o;
          },
          easeOutQuad: function (e, t, o, i, n) {
            return -i * (t /= n) * (t - 2) + o;
          },
          easeInOutQuad: function (e, t, o, i, n) {
            return (t /= n / 2) < 1
              ? (i / 2) * t * t + o
              : (-i / 2) * (--t * (t - 2) - 1) + o;
          },
          easeInCubic: function (e, t, o, i, n) {
            return i * (t /= n) * t * t + o;
          },
          easeOutCubic: function (e, t, o, i, n) {
            return i * ((t = t / n - 1) * t * t + 1) + o;
          },
          easeInOutCubic: function (e, t, o, i, n) {
            return (t /= n / 2) < 1
              ? (i / 2) * t * t * t + o
              : (i / 2) * ((t -= 2) * t * t + 2) + o;
          },
          easeInQuart: function (e, t, o, i, n) {
            return i * (t /= n) * t * t * t + o;
          },
          easeOutQuart: function (e, t, o, i, n) {
            return -i * ((t = t / n - 1) * t * t * t - 1) + o;
          },
          easeInOutQuart: function (e, t, o, i, n) {
            return (t /= n / 2) < 1
              ? (i / 2) * t * t * t * t + o
              : (-i / 2) * ((t -= 2) * t * t * t - 2) + o;
          },
          easeInQuint: function (e, t, o, i, n) {
            return i * (t /= n) * t * t * t * t + o;
          },
          easeOutQuint: function (e, t, o, i, n) {
            return i * ((t = t / n - 1) * t * t * t * t + 1) + o;
          },
          easeInOutQuint: function (e, t, o, i, n) {
            return (t /= n / 2) < 1
              ? (i / 2) * t * t * t * t * t + o
              : (i / 2) * ((t -= 2) * t * t * t * t + 2) + o;
          },
          easeInSine: function (e, t, o, i, n) {
            return -i * Math.cos((t / n) * (Math.PI / 2)) + i + o;
          },
          easeOutSine: function (e, t, o, i, n) {
            return i * Math.sin((t / n) * (Math.PI / 2)) + o;
          },
          easeInOutSine: function (e, t, o, i, n) {
            return (-i / 2) * (Math.cos((Math.PI * t) / n) - 1) + o;
          },
          easeInExpo: function (e, t, o, i, n) {
            return 0 == t ? o : i * Math.pow(2, 10 * (t / n - 1)) + o;
          },
          easeOutExpo: function (e, t, o, i, n) {
            return t == n ? o + i : i * (1 - Math.pow(2, (-10 * t) / n)) + o;
          },
          easeInOutExpo: function (e, t, o, i, n) {
            return 0 == t
              ? o
              : t == n
              ? o + i
              : (t /= n / 2) < 1
              ? (i / 2) * Math.pow(2, 10 * (t - 1)) + o
              : (i / 2) * (2 - Math.pow(2, -10 * --t)) + o;
          },
          easeInCirc: function (e, t, o, i, n) {
            return -i * (Math.sqrt(1 - (t /= n) * t) - 1) + o;
          },
          easeOutCirc: function (e, t, o, i, n) {
            return i * Math.sqrt(1 - (t = t / n - 1) * t) + o;
          },
          easeInOutCirc: function (e, t, o, i, n) {
            return (t /= n / 2) < 1
              ? (-i / 2) * (Math.sqrt(1 - t * t) - 1) + o
              : (i / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + o;
          },
          easeInElastic: function (e, t, o, i, n) {
            var s = 1.70158,
              a = 0,
              r = i;
            if (0 == t) return o;
            if (1 == (t /= n)) return o + i;
            if ((a || (a = 0.3 * n), r < Math.abs(i))) {
              r = i;
              s = a / 4;
            } else s = (a / (2 * Math.PI)) * Math.asin(i / r);
            return (
              -r *
                Math.pow(2, 10 * (t -= 1)) *
                Math.sin(((t * n - s) * (2 * Math.PI)) / a) +
              o
            );
          },
          easeOutElastic: function (e, t, o, i, n) {
            var s = 1.70158,
              a = 0,
              r = i;
            if (0 == t) return o;
            if (1 == (t /= n)) return o + i;
            if ((a || (a = 0.3 * n), r < Math.abs(i))) {
              r = i;
              s = a / 4;
            } else s = (a / (2 * Math.PI)) * Math.asin(i / r);
            return (
              r *
                Math.pow(2, -10 * t) *
                Math.sin(((t * n - s) * (2 * Math.PI)) / a) +
              i +
              o
            );
          },
          easeInOutElastic: function (e, t, o, i, n) {
            var s = 1.70158,
              a = 0,
              r = i;
            if (0 == t) return o;
            if (2 == (t /= n / 2)) return o + i;
            if ((a || (a = n * (0.3 * 1.5)), r < Math.abs(i))) {
              r = i;
              s = a / 4;
            } else s = (a / (2 * Math.PI)) * Math.asin(i / r);
            return t < 1
              ? r *
                  Math.pow(2, 10 * (t -= 1)) *
                  Math.sin(((t * n - s) * (2 * Math.PI)) / a) *
                  -0.5 +
                  o
              : r *
                  Math.pow(2, -10 * (t -= 1)) *
                  Math.sin(((t * n - s) * (2 * Math.PI)) / a) *
                  0.5 +
                  i +
                  o;
          },
          easeInBack: function (e, t, o, n, s, a) {
            return (
              a == i && (a = 1.70158), n * (t /= s) * t * ((a + 1) * t - a) + o
            );
          },
          easeOutBack: function (e, t, o, n, s, a) {
            return (
              a == i && (a = 1.70158),
              n * ((t = t / s - 1) * t * ((a + 1) * t + a) + 1) + o
            );
          },
          easeInOutBack: function (e, t, o, n, s, a) {
            return (
              a == i && (a = 1.70158),
              (t /= s / 2) < 1
                ? (n / 2) * (t * t * ((1 + (a *= 1.525)) * t - a)) + o
                : (n / 2) * ((t -= 2) * t * ((1 + (a *= 1.525)) * t + a) + 2) +
                  o
            );
          },
          easeInBounce: function (t, o, i, n, s) {
            return n - e.easing.easeOutBounce(t, s - o, 0, n, s) + i;
          },
          easeOutBounce: function (e, t, o, i, n) {
            return (t /= n) < 1 / 2.75
              ? i * (7.5625 * t * t) + o
              : t < 2 / 2.75
              ? i * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + o
              : t < 2.5 / 2.75
              ? i * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + o
              : i * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + o;
          },
          easeInOutBounce: function (t, o, i, n, s) {
            return o < s / 2
              ? 0.5 * e.easing.easeInBounce(t, 2 * o, 0, n, s) + i
              : 0.5 * e.easing.easeOutBounce(t, 2 * o - s, 0, n, s) +
                  0.5 * n +
                  i;
          },
        });
      },
    }),
    (FLIPBOOK.Book = function () {}),
    (FLIPBOOK.Book.prototype = {
      rightIndex: 0,
      goToPage: function () {},
      getRightIndex: function () {},
      canFlipNext: function () {
        return (
          this.flippedright > 0 &&
          (1 == this.view
            ? this.isFocusedLeft && this.isFocusedLeft()
            : !(
                1 == this.flippedright &&
                !this.options.rightToLeft &&
                this.options.oddPages
              ))
        );
      },
      canFlipPrev: function () {
        return (
          this.flippedleft > 0 &&
          (1 == this.view
            ? this.isFocusedRight && this.isFocusedRight()
            : 1 != this.flippedleft ||
              !this.options.rightToLeft ||
              !this.options.oddPages)
        );
      },
      getCurrentPageNumber: function () {
        if (1 == this.view) {
          var e =
            this.rightIndex % 2 == 1 ? this.rightIndex + 1 : this.rightIndex;
          return this.options.rightToLeft
            ? ((e = this.options.pages.length - e),
              this.isFocusedRight() ? e : e + 1)
            : this.isFocusedLeft()
            ? e
            : e + 1;
        }
      },
    }),
    (FLIPBOOK.Thumbnails = function (t) {
      var i = this,
        n = t.options,
        s = t.wrapper;
      (this.main = t),
        (this.options = n),
        (this.wrapper = s),
        (this.active = null),
        e(t).bind("pagechange", function () {
          i.thumbsWrapper.css("top", i.bookmark.height() + 50 + "px");
        }),
        (this.thumbHolder = e(o.createElement("div"))
          .addClass("flipbook-thumbHolder flipbook-side-menu skin-color-bg")
          .appendTo(s)
          .css(this.options.sideMenuPosition, "0")
          .hide()),
        (this.thumbsWrapper = e(o.createElement("div"))
          .appendTo(this.thumbHolder)
          .addClass("flipbook-thumbsWrapper")),
        (this.thumbsScroller = e(o.createElement("div"))
          .appendTo(this.thumbsWrapper)
          .addClass("flipbook-thumbsScroller")),
        t.createMenuHeader(
          this.thumbHolder,
          t.strings.thumbnails,
          t.toggleThumbs
        ),
        (this.bookmark = e("<div>")
          .addClass("flipbook-font")
          .appendTo(this.thumbHolder)
          .hide());
      e(
        '<a><div class="c-p skin-color flipbook-btn">' +
          n.strings.bookmarkCurrentPage +
          "</div></a>"
      )
        .appendTo(this.bookmark)
        .bind("touchend click", function (e) {
          t.bookmarkPage(t.cPage[0], this),
            e.preventDefault(),
            e.stopPropagation();
        }),
        e(
          '<a><div class="c-l-p skin-color flipbook-btn">' +
            n.strings.bookmarkLeftPage +
            "</div></a>"
        )
          .appendTo(this.bookmark)
          .bind("touchend click", function (e) {
            t.bookmarkPage(t.cPage[0], this),
              e.preventDefault(),
              e.stopPropagation();
          }),
        e(
          '<a><div class="c-r-p skin-color flipbook-btn">' +
            n.strings.bookmarkRightPage +
            "</div></a>"
        )
          .appendTo(this.bookmark)
          .bind("touchend click", function (e) {
            t.bookmarkPage(t.cPage[1], this),
              e.preventDefault(),
              e.stopPropagation();
          });
      (this.search = e("<div>")
        .addClass("flipbook-search")
        .appendTo(this.thumbHolder)
        .hide()),
        (this.$searchBar = e(
          '<div class="flipbook-findbar" id="findbar" deluminate_imagetype="png"><div id="findbarInputContainer"><input id="findInput" class="toolbarField" title="Find" placeholder="' +
            n.strings.findInDocument +
            '..."></div><div class="flipbook-find-info skin-color"/></div>'
        ).appendTo(this.search)),
        (this.$findInput = this.$searchBar
          .find("#findInput")
          .keyup(function () {
            var e = this.value;
            if ("" != e) {
              var t = i.main,
                o = t.pdfService,
                n = t.options;
              if (
                (i.hideAllThumbs(),
                (i.pagesFound = 0),
                i.$findInfo.hide(),
                t.unmark(),
                (t.searchingString = e),
                o)
              )
                for (var s = 0; s < o.pdfInfo.numPages; s++)
                  o.findInPage(e, s, function (t, o, s) {
                    t > 0 &&
                      (i.showThumb(s),
                      i.pagesFound++,
                      i.$findInfo
                        .show()
                        .text(
                          i.pagesFound +
                            " " +
                            n.strings.pagesFoundContaining +
                            ' "' +
                            e +
                            '"'
                        ),
                      i.main.mark(e));
                  });
              else
                for (s = 0; s < n.pagesOriginal.length; s++) {
                  var a = s;
                  n.doublePage && (a *= 2),
                    t.loadPageHTML(a, function (o, s) {
                      o.innerText
                        .toUpperCase()
                        .search(t.searchingString.toUpperCase()) > 0 &&
                        (n.doublePage && (s /= 2),
                        i.showThumb(s),
                        i.pagesFound++,
                        i.$findInfo
                          .show()
                          .text(
                            i.pagesFound +
                              " " +
                              n.strings.pagesFoundContaining +
                              ' "' +
                              e +
                              '"'
                          ),
                        i.main.mark(e));
                    });
                }
            }
          })),
        (this.$findInfo = this.$searchBar.find(".flipbook-find-info")),
        (this.thumbs = []);
      var a = n.pages,
        r = [];
      if (n.doublePage)
        for (var l = 0; l < a.length; l++)
          (0 != l && l % 2 == 0) || r.push(a[l]);
      else r = a;
      n.pdfMode && this.loadThumbsFromPdf(r);
      var d = n.thumbSize,
        h = (n.thumbSize * n.pageWidth) / n.pageHeight;
      for (l = 0; l < r.length; l++) {
        var p = r[l].thumb;
        if (!r[l].empty) {
          var c = e("<div>")
              .addClass("flipbook-thumb")
              .appendTo(i.thumbsScroller)
              .attr("data-thumb-index", l)
              .width(h)
              .height(d),
            u = e("<span>")
              .appendTo(c)
              .addClass("thumb-btn-close")
              .bind("touchend click", function (o) {
                o.stopPropagation(),
                  o.preventDefault(),
                  t.removeBookmark(e(this).parent().attr("data-thumb-index"));
              });
          e("<span>")
            .attr("aria-hidden", "true")
            .appendTo(u)
            .addClass("fa fa-times skin-color");
          if ((this.thumbs.push(c), r[l].thumbCanvas))
            var g = e(r[l].thumbCanvas);
          else {
            if (!p) continue;
            (g = e("<img/>").attr("src", p))[0].onload = function () {
              i.thumbScroll.refresh();
            };
          }
          g.appendTo(c), e("<br/>").appendTo(c);
          var f = n.doublePage && n.pages.length % 2 == 0 && l == r.length - 1,
            b = n.doublePage && 0 == l,
            m = n.doublePage && !b && !f;
          if (f) {
            g.height(d)
              .width(h)
              .attr("page-title", 2 * l);
            e(o.createElement("soan"))
              .text(String(2 * l))
              .appendTo(c)
              .addClass("skin-color")
              .addClass("flipbook-thumb-num");
          } else if (m) {
            c.width(2 * h),
              g
                .height(d)
                .width(2 * h)
                .attr("page-title", 2 * l + 1);
            e(o.createElement("soan"))
              .text(String(2 * l) + "-" + String(2 * l + 1))
              .appendTo(c)
              .addClass("skin-color")
              .addClass("flipbook-thumb-num");
          } else {
            g.height(d)
              .width(h)
              .attr("page-title", l + 1);
            e(o.createElement("span"))
              .text(l + 1)
              .appendTo(c)
              .addClass("skin-color")
              .addClass("flipbook-thumb-num");
          }
          g.bind("touchend click", function (o) {
            if (
              (o.stopPropagation(), o.preventDefault(), !i.thumbScroll.moved)
            ) {
              var s = Number(e(this).attr("page-title"));
              n.rightToLeft && (s = n.pages.length - s + 1),
                setTimeout(function () {
                  t.goToPage(s);
                }, 200),
                "search" != i.active &&
                  n.thumbsCloseOnClick &&
                  t.toggleThumbs(!1);
            }
          });
        }
      }
      (this.thumbScroll = new FLIPBOOK.IScroll(this.thumbsWrapper[0], {
        bounce: !1,
        mouseWheel: !0,
        scrollbars: !0,
        interactiveScrollbars: !0,
      })),
        t.initColors();
    }),
    (FLIPBOOK.Thumbnails.prototype = {
      loadThumbsFromPdf: function (e) {
        for (
          var t = this.main.pdfDocument._pdfInfo.numPages, i = 0;
          i < t;
          i++
        ) {
          var n = o.createElement("canvas");
          e[i].thumbCanvas = n;
        }
        this.loadThumbFromPdf(0, e);
      },
      loadVisibleThumbs: function () {},
      loadThumbFromPdf: function (e, t) {
        var o = this;
        this.main.pdfDocument.getPage(e + 1).then(function (e) {
          var i = e.getViewport({ scale: 1 }),
            n = o.options.thumbSize / i.height,
            s = e.getViewport({ scale: n }),
            a = t[e.pageIndex].thumbCanvas,
            r = a.getContext("2d");
          (a.height = s.height), (a.width = s.width);
          var l = { canvasContext: r, viewport: s };
          (e.cleanupAfterRender = !0),
            e.render(l).promise.then(function () {
              e.cleanup(),
                e.pageIndex + 1 < o.main.pdfDocument._pdfInfo.numPages &&
                  o.loadThumbFromPdf(e.pageIndex + 1, t);
            }),
            o.thumbScroll.refresh();
        });
      },
      showAllThumbs: function () {
        e(".flipbook-thumb").show(), this.thumbScroll.refresh();
      },
      hideAllThumbs: function () {
        e(".flipbook-thumb").hide(), this.thumbScroll.refresh();
      },
      showThumb: function (e) {
        this.thumbs[e] && this.thumbs[e].show(), this.thumbScroll.refresh();
      },
      hideThumb: function (e) {
        this.thumbs[e].hide(), this.thumbScroll.refresh();
      },
      showBookmarks: function () {
        e(".thumb-btn-close").show(),
          this.showBookmarkedThumbs(),
          this.bookmark.show(),
          this.setTitle(this.options.strings.bookmarks),
          this.main.updateCurrentPage(),
          (this.active = "bookmarks");
      },
      showSearch: function () {
        this.thumbsWrapper.css("top", "120px"),
          this.hideAllThumbs(),
          this.search.show(),
          this.$findInfo.hide(),
          e(".thumb-btn-close").hide(),
          this.setTitle(this.options.strings.search),
          this.$findInput.val("").focus(),
          (this.active = "search");
      },
      showBookmarkedThumbs: function () {
        var e = this.main.getBookmarkedPages();
        this.hideAllThumbs();
        for (var t = 0; t < e.length; t++) {
          var o = e[t];
          o && this.showThumb(o);
        }
        this.thumbsWrapper.css("top", 50 + this.bookmark.height() + "px");
      },
      show: function () {
        this.setTitle(this.options.strings.thumbnails),
          this.bookmark.hide(),
          this.search.hide(),
          this.thumbHolder.show(),
          this.main.thumbsVertical(),
          this.thumbsWrapper.css("top", "50px"),
          this.showAllThumbs(),
          e(".thumb-btn-close").hide(),
          this.loadVisibleThumbs(),
          this.main.resize(),
          (this.active = "thumbs");
      },
      hide: function () {
        this.thumbHolder.hide(), this.main.resize(), (this.active = null);
      },
      setTitle: function (e) {
        this.thumbHolder.find(".flipbook-menu-title").text(e);
      },
    }),
    (FLIPBOOK.Lightbox = function (t, i, n) {
      var s = this;
      (this.context = t),
        (this.options = n),
        t.$elem.bind("tap click", function (e) {
          i.disposed || (s.openLightbox(), e.stopPropagation());
        });
      e(t.elem).find("img");
      (s.overlay = e(o.createElement("div"))
        .attr("style", n.lightboxCSS)
        .addClass("flipbook-overlay")
        .css("display", "none")
        .css("top", s.options.lightboxMarginV)
        .css("bottom", s.options.lightboxMarginV)
        .css("left", s.options.lightboxMarginH)
        .css("right", s.options.lightboxMarginH)
        .appendTo("body")),
        s.options.lightboxCloseOnClick &&
          e("body").bind("tap click", function (t) {
            var o = e(t.target);
            (o.parents().hasClass("flipbook-overlay") &&
              !o.hasClass("flipbook-bookLayer")) ||
              s.closeLightbox();
          }),
        n.lightboxBackground &&
          s.overlay.css("background", n.lightboxBackground),
        n.lightboxBackgroundColor &&
          s.overlay.css("background", n.lightboxBackgroundColor),
        n.lightboxBackgroundPattern &&
          s.overlay.css(
            "background",
            "url(" + n.lightboxBackgroundPattern + ") repeat"
          ),
        n.lightboxBackgroundImage &&
          (s.overlay.css(
            "background",
            "url(" + n.lightboxBackgroundImage + ") no-repeat"
          ),
          s.overlay.css("background-size", "cover"),
          s.overlay.css("background-position", "center center")),
        e(o).keyup(function (e) {
          27 == e.keyCode && s.closeLightbox();
        }),
        (s.wrapper = e(o.createElement("div"))
          .css("height", "auto")
          .appendTo(s.overlay)),
        s.wrapper
          .attr("class", "flipbook-wrapper-transparent")
          .css("margin", "0px auto")
          .css("padding", "0px")
          .css("height", "100%")
          .css("width", "100%"),
        i.appendTo(s.wrapper);
      e("<div/>").appendTo(s.wrapper).addClass("flipbook-lightbox-toolbar");
    }),
    (FLIPBOOK.Lightbox.prototype = {
      openLightbox: function () {
        FLIPBOOK.lightboxOpened ||
          ((FLIPBOOK.lightboxOpened = !0),
          this.overlay.css("display", "none"),
          this.overlay.fadeIn("slow"),
          e("body").addClass("flipbook-overflow-hidden"),
          e("html").addClass("flipbook-overflow-hidden"),
          e(t).trigger("r3d-lightboxopen"),
          this.options.deeplinkingEnabled ||
            t.history.pushState(null, "", t.location.href),
          this.context.options.password &&
            !this.context.pdfinitStarted &&
            this.context.initialized &&
            this.context.initPdf());
      },
      closeLightbox: function (o) {
        (FLIPBOOK.lightboxOpened = !1),
          this.overlay.fadeOut("fast"),
          e("body").removeClass("flipbook-overflow-hidden"),
          e("html").removeClass("flipbook-overflow-hidden"),
          e(t).trigger("r3d-lightboxclose"),
          e(this.context.fullscreenElement).removeClass(
            "flipbook-browser-fullscreen"
          ),
          this.context.lightboxEnd(),
          o || this.options.deeplinkingEnabled || history.back();
      },
      resize: function () {
        var o = e(t);
        o.width(), o.height();
      },
    }),
    (FLIPBOOK.getFlipbookSrc = function () {
      for (var e = o.getElementsByTagName("script"), t = 0; t < e.length; t++) {
        var i = String(e[t].src);
        if (i.match("flipbook\\.js") || i.match("flipbook\\.min\\.js"))
          return i;
        if (
          i.match("flipbook\\.lite\\.js") ||
          i.match("flipbook\\.lite\\.min\\.js")
        )
          return i.replace(".lite", "");
      }
      return "";
    }),
    (FLIPBOOK.flipbookSrc = FLIPBOOK.getFlipbookSrc()),
    (FLIPBOOK.iscrollSrc = FLIPBOOK.flipbookSrc.replace(
      "/flipbook.",
      "/iscroll."
    )),
    (FLIPBOOK.threejsSrc = FLIPBOOK.flipbookSrc.replace(
      "/flipbook.",
      "/three."
    )),
    (FLIPBOOK.flipbookWebGlSrc = FLIPBOOK.flipbookSrc.replace(
      "/flipbook.",
      "/flipbook.webgl."
    )),
    (FLIPBOOK.flipbookBook3Src = FLIPBOOK.flipbookSrc.replace(
      "/flipbook.",
      "/flipbook.book3."
    )),
    (FLIPBOOK.flipBookSwipeSrc = FLIPBOOK.flipbookSrc.replace(
      "/flipbook.",
      "/flipbook.swipe."
    )),
    (FLIPBOOK.pdfjsSrc = FLIPBOOK.flipbookSrc.replace("/flipbook.", "/pdf.")),
    (FLIPBOOK.pdfServiceSrc = FLIPBOOK.flipbookSrc.replace(
      "/flipbook.",
      "/flipbook.pdfservice."
    )),
    (FLIPBOOK.pdfjsworkerSrc = FLIPBOOK.flipbookSrc.replace(
      "/flipbook.",
      "/pdf.worker."
    )),
    (FLIPBOOK.markSrc =
      "https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.js"),
    (FLIPBOOK.scriptsLoaded = {}),
    (FLIPBOOK.scriptsAdded = {});
})(jQuery, window, document),
  (FLIPBOOK.onPageLinkClick = function (e) {
    var t = e.dataset.bookid,
      o = e.dataset.page;
    o && FLIPBOOK.books[t].goToPage(Number(o));
    var i = e.dataset.url;
    i && window.open(i, "_blank");
  }),
  (function () {
    "use strict";
    var e =
        "undefined" != typeof window && void 0 !== window.document
          ? window.document
          : {},
      t = "undefined" != typeof module && module.exports,
      o = "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT" in Element,
      i = (function () {
        for (
          var t,
            o = [
              [
                "requestFullscreen",
                "exitFullscreen",
                "fullscreenElement",
                "fullscreenEnabled",
                "fullscreenchange",
                "fullscreenerror",
              ],
              [
                "webkitRequestFullscreen",
                "webkitExitFullscreen",
                "webkitFullscreenElement",
                "webkitFullscreenEnabled",
                "webkitfullscreenchange",
                "webkitfullscreenerror",
              ],
              [
                "webkitRequestFullScreen",
                "webkitCancelFullScreen",
                "webkitCurrentFullScreenElement",
                "webkitCancelFullScreen",
                "webkitfullscreenchange",
                "webkitfullscreenerror",
              ],
              [
                "mozRequestFullScreen",
                "mozCancelFullScreen",
                "mozFullScreenElement",
                "mozFullScreenEnabled",
                "mozfullscreenchange",
                "mozfullscreenerror",
              ],
              [
                "msRequestFullscreen",
                "msExitFullscreen",
                "msFullscreenElement",
                "msFullscreenEnabled",
                "MSFullscreenChange",
                "MSFullscreenError",
              ],
            ],
            i = 0,
            n = o.length,
            s = {};
          i < n;
          i++
        )
          if ((t = o[i]) && t[1] in e) {
            for (i = 0; i < t.length; i++) s[o[0][i]] = t[i];
            return s;
          }
        return !1;
      })(),
      n = { change: i.fullscreenchange, error: i.fullscreenerror },
      s = {
        request: function (t) {
          return new Promise(
            function (n) {
              var s = i.requestFullscreen,
                a = function () {
                  this.off("change", a), n();
                }.bind(this);
              (t = t || e.documentElement),
                / Version\/5\.1(?:\.\d+)? Safari\//.test(navigator.userAgent)
                  ? t[s]()
                  : t[s](o ? Element.ALLOW_KEYBOARD_INPUT : {}),
                this.on("change", a);
            }.bind(this)
          );
        },
        exit: function () {
          return new Promise(
            function (t) {
              var o = function () {
                this.off("change", o), t();
              }.bind(this);
              e[i.exitFullscreen](), this.on("change", o);
            }.bind(this)
          );
        },
        toggle: function (e) {
          return this.isFullscreen ? this.exit() : this.request(e);
        },
        onchange: function (e) {
          this.on("change", e);
        },
        onerror: function (e) {
          this.on("error", e);
        },
        on: function (t, o) {
          var i = n[t];
          i && e.addEventListener(i, o, !1);
        },
        off: function (t, o) {
          var i = n[t];
          i && e.removeEventListener(i, o, !1);
        },
        raw: i,
      };
    i
      ? (Object.defineProperties(s, {
          isFullscreen: {
            get: function () {
              return Boolean(e[i.fullscreenElement]);
            },
          },
          element: {
            enumerable: !0,
            get: function () {
              return e[i.fullscreenElement];
            },
          },
          enabled: {
            enumerable: !0,
            get: function () {
              return Boolean(e[i.fullscreenEnabled]);
            },
          },
        }),
        t ? (module.exports = s) : (window.screenfull = s))
      : t
      ? (module.exports = !1)
      : (window.screenfull = !1);
  })(),
  (function (e) {
    "function" == typeof define && define.amd && define.amd.jQuery
      ? define(["jquery"], e)
      : e(
          "undefined" != typeof module && module.exports
            ? require("jquery")
            : jQuery
        );
  })(function (e) {
    "use strict";
    function t(t, y) {
      function M(t) {
        if (
          !(
            !0 === Se.data(T + "_intouch") ||
            e(t.target).closest(y.excludedElements, Se).length > 0
          )
        ) {
          var a = t.originalEvent ? t.originalEvent : t;
          if (
            !a.pointerType ||
            "mouse" != a.pointerType ||
            0 != y.fallbackToMouseEvents
          ) {
            var r,
              l = a.touches,
              d = l ? l[0] : a;
            return (
              (Be = v),
              l
                ? (xe = l.length)
                : !1 !== y.preventDefaultEvents && t.preventDefault(),
              (ce = 0),
              (ue = null),
              (ge = null),
              (we = null),
              (fe = 0),
              (be = 0),
              (me = 0),
              (ke = 1),
              (ve = 0),
              ((h = {})[o] = te(o)),
              (h[i] = te(i)),
              (h[n] = te(n)),
              (h[s] = te(s)),
              (Pe = h),
              Q(),
              X(0, d),
              !l || xe === y.fingers || y.fingers === m || N()
                ? ((Te = se()),
                  2 == xe &&
                    (X(1, l[1]), (be = me = ie(Oe[0].start, Oe[1].start))),
                  (y.swipeStatus || y.pinchStatus) && (r = A(a, Be)))
                : (r = !1),
              !1 === r
                ? (A(a, (Be = S)), r)
                : (y.hold &&
                    (Fe = setTimeout(
                      e.proxy(function () {
                        Se.trigger("hold", [a.target]),
                          y.hold && (r = y.hold.call(Se, a, a.target));
                      }, this),
                      y.longTapThreshold
                    )),
                  Y(!0),
                  null)
            );
          }
        }
        var h;
      }
      function L(t) {
        var h,
          p,
          c,
          u,
          g = t.originalEvent ? t.originalEvent : t;
        if (Be !== P && Be !== S && !G()) {
          var k,
            v = g.touches,
            B = J(v ? v[0] : g);
          if (
            ((ye = se()),
            v && (xe = v.length),
            y.hold && clearTimeout(Fe),
            (Be = w),
            2 == xe &&
              (0 == be
                ? (X(1, v[1]), (be = me = ie(Oe[0].start, Oe[1].start)))
                : (J(v[1]),
                  (me = ie(Oe[0].end, Oe[1].end)),
                  Oe[0].end,
                  Oe[1].end,
                  (we = ke < 1 ? r : a)),
              (ke = ((me / be) * 1).toFixed(2)),
              (ve = Math.abs(be - me))),
            xe === y.fingers || y.fingers === m || !v || N())
          ) {
            if (
              ((ue = ne(B.start, B.end)),
              (function (e, t) {
                if (!1 !== y.preventDefaultEvents)
                  if (y.allowPageScroll === l) e.preventDefault();
                  else {
                    var a = y.allowPageScroll === d;
                    switch (t) {
                      case o:
                        ((y.swipeLeft && a) ||
                          (!a && y.allowPageScroll != f)) &&
                          e.preventDefault();
                        break;
                      case i:
                        ((y.swipeRight && a) ||
                          (!a && y.allowPageScroll != f)) &&
                          e.preventDefault();
                        break;
                      case n:
                        ((y.swipeUp && a) || (!a && y.allowPageScroll != b)) &&
                          e.preventDefault();
                        break;
                      case s:
                        ((y.swipeDown && a) ||
                          (!a && y.allowPageScroll != b)) &&
                          e.preventDefault();
                    }
                  }
              })(t, (ge = ne(B.last, B.end))),
              (c = B.start),
              (u = B.end),
              (ce = Math.round(
                Math.sqrt(Math.pow(u.x - c.x, 2) + Math.pow(u.y - c.y, 2))
              )),
              (fe = oe()),
              (function (e, t) {
                e != l && ((t = Math.max(t, ee(e))), (Pe[e].distance = t));
              })(ue, ce),
              (k = A(g, Be)),
              !y.triggerOnTouchEnd || y.triggerOnTouchLeave)
            ) {
              var x = !0;
              if (y.triggerOnTouchLeave) {
                var O = {
                  left: (p = (h = e((h = this))).offset()).left,
                  right: p.left + h.outerWidth(),
                  top: p.top,
                  bottom: p.top + h.outerHeight(),
                };
                x = (function (e, t) {
                  return (
                    e.x > t.left &&
                    e.x < t.right &&
                    e.y > t.top &&
                    e.y < t.bottom
                  );
                })(B.end, O);
              }
              !y.triggerOnTouchEnd && x
                ? (Be = E(w))
                : y.triggerOnTouchLeave && !x && (Be = E(P)),
                (Be != S && Be != P) || A(g, Be);
            }
          } else A(g, (Be = S));
          !1 === k && A(g, (Be = S));
        }
      }
      function C(e) {
        var t = e.originalEvent ? e.originalEvent : e,
          o = t.touches;
        if (o) {
          if (o.length && !G())
            return (
              (function (e) {
                (Me = se()), (Le = e.touches.length + 1);
              })(t),
              !0
            );
          if (o.length && G()) return !0;
        }
        return (
          G() && (xe = Le),
          (ye = se()),
          (fe = oe()),
          K() || !D()
            ? A(t, (Be = S))
            : y.triggerOnTouchEnd || (!1 === y.triggerOnTouchEnd && Be === w)
            ? (!1 !== y.preventDefaultEvents &&
                !1 !== e.cancelable &&
                e.preventDefault(),
              A(t, (Be = P)))
            : !y.triggerOnTouchEnd && $()
            ? _(t, (Be = P), c)
            : Be === w && A(t, (Be = S)),
          Y(!1),
          null
        );
      }
      function I() {
        (xe = 0), (ye = 0), (Te = 0), (be = 0), (me = 0), (ke = 1), Q(), Y(!1);
      }
      function F(e) {
        var t = e.originalEvent ? e.originalEvent : e;
        y.triggerOnTouchLeave && A(t, (Be = E(P)));
      }
      function z() {
        Se.unbind(re, M),
          Se.unbind(pe, I),
          Se.unbind(le, L),
          Se.unbind(de, C),
          he && Se.unbind(he, F),
          Y(!1);
      }
      function E(e) {
        var t = e,
          o = H(),
          i = D(),
          n = K();
        return (
          !o || n
            ? (t = S)
            : !i || e != w || (y.triggerOnTouchEnd && !y.triggerOnTouchLeave)
            ? !i && e == P && y.triggerOnTouchLeave && (t = S)
            : (t = P),
          t
        );
      }
      function A(e, t) {
        var o,
          i = e.touches;
        return (
          (!(!j() || !W()) || W()) && (o = _(e, t, h)),
          (!(!R() || !N()) || N()) && !1 !== o && (o = _(e, t, p)),
          Z() && q() && !1 !== o
            ? (o = _(e, t, u))
            : fe > y.longTapThreshold && ce < k && y.longTap && !1 !== o
            ? (o = _(e, t, g))
            : !((1 !== xe && B) || !(isNaN(ce) || ce < y.threshold) || !$()) &&
              !1 !== o &&
              (o = _(e, t, c)),
          t === S && I(),
          t === P && ((i && i.length) || I()),
          o
        );
      }
      function _(t, l, d) {
        var f;
        if (d == h) {
          if (
            (Se.trigger("swipeStatus", [
              l,
              ue || null,
              ce || 0,
              fe || 0,
              xe,
              Oe,
              ge,
            ]),
            y.swipeStatus &&
              !1 ===
                (f = y.swipeStatus.call(
                  Se,
                  t,
                  l,
                  ue || null,
                  ce || 0,
                  fe || 0,
                  xe,
                  Oe,
                  ge
                )))
          )
            return !1;
          if (l == P && j()) {
            if (
              (clearTimeout(Ie),
              clearTimeout(Fe),
              Se.trigger("swipe", [ue, ce, fe, xe, Oe, ge]),
              y.swipe &&
                !1 === (f = y.swipe.call(Se, t, ue, ce, fe, xe, Oe, ge)))
            )
              return !1;
            switch (ue) {
              case o:
                Se.trigger("swipeLeft", [ue, ce, fe, xe, Oe, ge]),
                  y.swipeLeft &&
                    (f = y.swipeLeft.call(Se, t, ue, ce, fe, xe, Oe, ge));
                break;
              case i:
                Se.trigger("swipeRight", [ue, ce, fe, xe, Oe, ge]),
                  y.swipeRight &&
                    (f = y.swipeRight.call(Se, t, ue, ce, fe, xe, Oe, ge));
                break;
              case n:
                Se.trigger("swipeUp", [ue, ce, fe, xe, Oe, ge]),
                  y.swipeUp &&
                    (f = y.swipeUp.call(Se, t, ue, ce, fe, xe, Oe, ge));
                break;
              case s:
                Se.trigger("swipeDown", [ue, ce, fe, xe, Oe, ge]),
                  y.swipeDown &&
                    (f = y.swipeDown.call(Se, t, ue, ce, fe, xe, Oe, ge));
            }
          }
        }
        if (d == p) {
          if (
            (Se.trigger("pinchStatus", [
              l,
              we || null,
              ve || 0,
              fe || 0,
              xe,
              ke,
              Oe,
            ]),
            y.pinchStatus &&
              !1 ===
                (f = y.pinchStatus.call(
                  Se,
                  t,
                  l,
                  we || null,
                  ve || 0,
                  fe || 0,
                  xe,
                  ke,
                  Oe
                )))
          )
            return !1;
          if (l == P && R())
            switch (we) {
              case a:
                Se.trigger("pinchIn", [
                  we || null,
                  ve || 0,
                  fe || 0,
                  xe,
                  ke,
                  Oe,
                ]),
                  y.pinchIn &&
                    (f = y.pinchIn.call(
                      Se,
                      t,
                      we || null,
                      ve || 0,
                      fe || 0,
                      xe,
                      ke,
                      Oe
                    ));
                break;
              case r:
                Se.trigger("pinchOut", [
                  we || null,
                  ve || 0,
                  fe || 0,
                  xe,
                  ke,
                  Oe,
                ]),
                  y.pinchOut &&
                    (f = y.pinchOut.call(
                      Se,
                      t,
                      we || null,
                      ve || 0,
                      fe || 0,
                      xe,
                      ke,
                      Oe
                    ));
            }
        }
        return (
          d == c
            ? (l !== S && l !== P) ||
              (clearTimeout(Ie),
              clearTimeout(Fe),
              q() && !Z()
                ? ((Ce = se()),
                  (Ie = setTimeout(
                    e.proxy(function () {
                      (Ce = null),
                        Se.trigger("tap", [t.target]),
                        y.tap && (f = y.tap.call(Se, t, t.target));
                    }, this),
                    y.doubleTapThreshold
                  )))
                : ((Ce = null),
                  Se.trigger("tap", [t.target]),
                  y.tap && (f = y.tap.call(Se, t, t.target))))
            : d == u
            ? (l !== S && l !== P) ||
              (clearTimeout(Ie),
              clearTimeout(Fe),
              (Ce = null),
              Se.trigger("doubletap", [t.target]),
              y.doubleTap && (f = y.doubleTap.call(Se, t, t.target)))
            : d == g &&
              ((l !== S && l !== P) ||
                (clearTimeout(Ie),
                (Ce = null),
                Se.trigger("longtap", [t.target]),
                y.longTap && (f = y.longTap.call(Se, t, t.target)))),
          f
        );
      }
      function D() {
        var e = !0;
        return null !== y.threshold && (e = ce >= y.threshold), e;
      }
      function K() {
        var e = !1;
        return (
          null !== y.cancelThreshold &&
            null !== ue &&
            (e = ee(ue) - ce >= y.cancelThreshold),
          e
        );
      }
      function H() {
        return !(y.maxTimeThreshold && fe >= y.maxTimeThreshold);
      }
      function R() {
        var e = V(),
          t = U(),
          o = null === y.pinchThreshold || ve >= y.pinchThreshold;
        return e && t && o;
      }
      function N() {
        return !!(y.pinchStatus || y.pinchIn || y.pinchOut);
      }
      function j() {
        var e = H(),
          t = D(),
          o = V(),
          i = U();
        return !K() && i && o && t && e;
      }
      function W() {
        return !!(
          y.swipe ||
          y.swipeStatus ||
          y.swipeLeft ||
          y.swipeRight ||
          y.swipeUp ||
          y.swipeDown
        );
      }
      function V() {
        return xe === y.fingers || y.fingers === m || !B;
      }
      function U() {
        return 0 !== Oe[0].end.x;
      }
      function $() {
        return !!y.tap;
      }
      function q() {
        return !!y.doubleTap;
      }
      function Z() {
        if (null == Ce) return !1;
        var e = se();
        return q() && e - Ce <= y.doubleTapThreshold;
      }
      function Q() {
        (Me = 0), (Le = 0);
      }
      function G() {
        var e = !1;
        Me && se() - Me <= y.fingerReleaseThreshold && (e = !0);
        return e;
      }
      function Y(e) {
        Se &&
          (!0 === e
            ? (Se.bind(le, L), Se.bind(de, C), he && Se.bind(he, F))
            : (Se.unbind(le, L, !1),
              Se.unbind(de, C, !1),
              he && Se.unbind(he, F, !1)),
          Se.data(T + "_intouch", !0 === e));
      }
      function X(e, t) {
        var o = {
          start: { x: 0, y: 0 },
          last: { x: 0, y: 0 },
          end: { x: 0, y: 0 },
        };
        return (
          (o.start.x = o.last.x = o.end.x = t.pageX || t.clientX),
          (o.start.y = o.last.y = o.end.y = t.pageY || t.clientY),
          (Oe[e] = o),
          o
        );
      }
      function J(e) {
        var t = void 0 !== e.identifier ? e.identifier : 0,
          o = (function (e) {
            return Oe[e] || null;
          })(t);
        return (
          null === o && (o = X(t, e)),
          (o.last.x = o.end.x),
          (o.last.y = o.end.y),
          (o.end.x = e.pageX || e.clientX),
          (o.end.y = e.pageY || e.clientY),
          o
        );
      }
      function ee(e) {
        if (Pe[e]) return Pe[e].distance;
      }
      function te(e) {
        return { direction: e, distance: 0 };
      }
      function oe() {
        return ye - Te;
      }
      function ie(e, t) {
        var o = Math.abs(e.x - t.x),
          i = Math.abs(e.y - t.y);
        return Math.round(Math.sqrt(o * o + i * i));
      }
      function ne(e, t) {
        if (((r = t), (a = e).x == r.x && a.y == r.y)) return l;
        var a,
          r,
          d = (function (e, t) {
            var o = e.x - t.x,
              i = t.y - e.y,
              n = Math.atan2(i, o),
              s = Math.round((180 * n) / Math.PI);
            return s < 0 && (s = 360 - Math.abs(s)), s;
          })(e, t);
        return d <= 45 && d >= 0
          ? o
          : d <= 360 && d >= 315
          ? o
          : d >= 135 && d <= 225
          ? i
          : d > 45 && d < 135
          ? s
          : n;
      }
      function se() {
        return new Date().getTime();
      }
      y = e.extend({}, y);
      var ae = B || O || !y.fallbackToMouseEvents,
        re = ae
          ? O
            ? x
              ? "MSPointerDown"
              : "pointerdown"
            : "touchstart"
          : "mousedown",
        le = ae
          ? O
            ? x
              ? "MSPointerMove"
              : "pointermove"
            : "touchmove"
          : "mousemove",
        de = ae
          ? O
            ? x
              ? "MSPointerUp"
              : "pointerup"
            : "touchend"
          : "mouseup",
        he = ae ? (O ? "mouseleave" : null) : "mouseleave",
        pe = O ? (x ? "MSPointerCancel" : "pointercancel") : "touchcancel",
        ce = 0,
        ue = null,
        ge = null,
        fe = 0,
        be = 0,
        me = 0,
        ke = 1,
        ve = 0,
        we = 0,
        Pe = null,
        Se = e(t),
        Be = "start",
        xe = 0,
        Oe = {},
        Te = 0,
        ye = 0,
        Me = 0,
        Le = 0,
        Ce = 0,
        Ie = null,
        Fe = null;
      try {
        Se.bind(re, M), Se.bind(pe, I);
      } catch (t) {
        e.error("events not supported " + re + "," + pe + " on jQuery.swipe");
      }
      (this.enable = function () {
        return this.disable(), Se.bind(re, M), Se.bind(pe, I), Se;
      }),
        (this.disable = function () {
          return z(), Se;
        }),
        (this.destroy = function () {
          z(), Se.data(T, null), (Se = null);
        }),
        (this.option = function (t, o) {
          if ("object" == typeof t) y = e.extend(y, t);
          else if (void 0 !== y[t]) {
            if (void 0 === o) return y[t];
            y[t] = o;
          } else {
            if (!t) return y;
            e.error("Option " + t + " does not exist on jQuery.swipe.options");
          }
          return null;
        });
    }
    var o = "left",
      i = "right",
      n = "up",
      s = "down",
      a = "in",
      r = "out",
      l = "none",
      d = "auto",
      h = "swipe",
      p = "pinch",
      c = "tap",
      u = "doubletap",
      g = "longtap",
      f = "horizontal",
      b = "vertical",
      m = "all",
      k = 10,
      v = "start",
      w = "move",
      P = "end",
      S = "cancel",
      B = "ontouchstart" in window,
      x =
        window.navigator.msPointerEnabled &&
        !window.navigator.pointerEnabled &&
        !B,
      O =
        (window.navigator.pointerEnabled ||
          window.navigator.msPointerEnabled) &&
        !B,
      T = "TouchSwipe";
    (e.fn.swipe = function (o) {
      var i = e(this),
        n = i.data(T);
      if (n && "string" == typeof o) {
        if (n[o])
          return n[o].apply(n, Array.prototype.slice.call(arguments, 1));
        e.error("Method " + o + " does not exist on jQuery.swipe");
      } else if (n && "object" == typeof o) n.option.apply(n, arguments);
      else if (!(n || ("object" != typeof o && o)))
        return function (o) {
          return (
            !o ||
              void 0 !== o.allowPageScroll ||
              (void 0 === o.swipe && void 0 === o.swipeStatus) ||
              (o.allowPageScroll = l),
            void 0 !== o.click && void 0 === o.tap && (o.tap = o.click),
            o || (o = {}),
            (o = e.extend({}, e.fn.swipe.defaults, o)),
            this.each(function () {
              var i = e(this),
                n = i.data(T);
              n || ((n = new t(this, o)), i.data(T, n));
            })
          );
        }.apply(this, arguments);
      return i;
    }),
      (e.fn.swipe.version = "1.6.18"),
      (e.fn.swipe.defaults = {
        fingers: 1,
        threshold: 75,
        cancelThreshold: null,
        pinchThreshold: 20,
        maxTimeThreshold: null,
        fingerReleaseThreshold: 250,
        longTapThreshold: 500,
        doubleTapThreshold: 200,
        swipe: null,
        swipeLeft: null,
        swipeRight: null,
        swipeUp: null,
        swipeDown: null,
        swipeStatus: null,
        pinchIn: null,
        pinchOut: null,
        pinchStatus: null,
        click: null,
        tap: null,
        doubleTap: null,
        longTap: null,
        hold: null,
        triggerOnTouchEnd: !0,
        triggerOnTouchLeave: !1,
        allowPageScroll: "auto",
        fallbackToMouseEvents: !0,
        excludedElements: ".noSwipe",
        preventDefaultEvents: !0,
      }),
      (e.fn.swipe.phases = {
        PHASE_START: v,
        PHASE_MOVE: w,
        PHASE_END: P,
        PHASE_CANCEL: S,
      }),
      (e.fn.swipe.directions = {
        LEFT: o,
        RIGHT: i,
        UP: n,
        DOWN: s,
        IN: a,
        OUT: r,
      }),
      (e.fn.swipe.pageScroll = {
        NONE: l,
        HORIZONTAL: f,
        VERTICAL: b,
        AUTO: d,
      }),
      (e.fn.swipe.fingers = {
        ONE: 1,
        TWO: 2,
        THREE: 3,
        FOUR: 4,
        FIVE: 5,
        ALL: m,
      });
  }),
  (function (e) {
    if ("object" == typeof exports && "undefined" != typeof module)
      module.exports = e();
    else if ("function" == typeof define && define.amd) define([], e);
    else {
      ("undefined" != typeof window
        ? window
        : "undefined" != typeof global
        ? global
        : "undefined" != typeof self
        ? self
        : this
      ).Share = e();
    }
  })(function () {
    var e;
    "classList" in document.documentElement ||
      !Object.defineProperty ||
      "undefined" == typeof HTMLElement ||
      Object.defineProperty(HTMLElement.prototype, "classList", {
        get: function () {
          var e, t, o;
          return (
            (o = function (e) {
              return function (o) {
                var i, n;
                (n = (i = t.className.split(/\s+/)).indexOf(o)),
                  e(i, n, o),
                  (t.className = i.join(" "));
              };
            }),
            (t = this),
            (e = {
              add: o(function (e, t, o) {
                ~t || e.push(o);
              }),
              remove: o(function (e, t) {
                ~t && e.splice(t, 1);
              }),
              toggle: o(function (e, t, o) {
                ~t ? e.splice(t, 1) : e.push(o);
              }),
              contains: function (e) {
                return !!~t.className.split(/\s+/).indexOf(e);
              },
              item: function (e) {
                return t.className.split(/\s+/)[e] || null;
              },
            }),
            Object.defineProperty(e, "length", {
              get: function () {
                return t.className.split(/\s+/).length;
              },
            }),
            e
          );
        },
      }),
      (String.prototype.to_rfc3986 = function () {
        return encodeURIComponent(this).replace(/[!'()*]/g, function (e) {
          return "%" + e.charCodeAt(0).toString(16);
        });
      }),
      (e = (function () {
        function e() {}
        return (
          (e.prototype.extend = function (e, t, o) {
            var i, n;
            for (n in t)
              (i = void 0 !== e[n]) && "object" == typeof t[n]
                ? this.extend(e[n], t[n], o)
                : (o || !i) && (e[n] = t[n]);
          }),
          (e.prototype.hide = function (e) {
            return (e.style.display = "none");
          }),
          (e.prototype.show = function (e) {
            return (e.style.display = "block");
          }),
          (e.prototype.has_class = function (e, t) {
            return e.classList.contains(t);
          }),
          (e.prototype.add_class = function (e, t) {
            return e.classList.add(t);
          }),
          (e.prototype.remove_class = function (e, t) {
            return e.classList.remove(t);
          }),
          (e.prototype.is_encoded = function (e) {
            return (e = e.to_rfc3986()), decodeURIComponent(e) !== e;
          }),
          (e.prototype.encode = function (e) {
            return void 0 === e || this.is_encoded(e) ? e : e.to_rfc3986();
          }),
          (e.prototype.popup = function (e, t) {
            var o, i, n, s;
            return (
              null == t && (t = {}),
              ((i = { width: 500, height: 350 }).top =
                screen.height / 2 - i.height / 2),
              (i.left = screen.width / 2 - i.width / 2),
              (n = function () {
                var e;
                for (o in ((e = []), t))
                  (s = t[o]), e.push(o + "=" + this.encode(s));
                return e;
              }
                .call(this)
                .join("&")) && (n = "?" + n),
              window.open(
                e + n,
                "targetWindow",
                "toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,left=" +
                  i.left +
                  ",top=" +
                  i.top +
                  ",width=" +
                  i.width +
                  ",height=" +
                  i.height
              )
            );
          }),
          e
        );
      })());
    var t = {}.hasOwnProperty;
    return (function (e) {
      function o(e, t) {
        return (
          (this.element = e),
          (this.el = {
            head: document.getElementsByTagName("head")[0],
            body: document.getElementsByTagName("body")[0],
          }),
          (this.config = {
            enabled_networks: 0,
            protocol:
              -1 ===
              ["http", "https"].indexOf(window.location.href.split(":")[0])
                ? "https://"
                : "//",
            url: window.location.href,
            caption: null,
            title: this.default_title(),
            image: this.default_image(),
            description: this.default_description(),
            ui: {
              flyout: "top center",
              button_text: "Share",
              button_font: !0,
              icon_font: !0,
            },
            networks: {
              twitter: { enabled: !0, url: null, description: null },
              facebook: {
                enabled: !0,
                load_sdk: !0,
                url: null,
                app_id: null,
                title: null,
                caption: null,
                description: null,
                image: null,
              },
              pinterest: {
                enabled: !0,
                url: null,
                image: null,
                description: null,
              },
              email: { enabled: !0, title: null, description: null, url: null },
            },
          }),
          this.setup(this.element, t),
          this
        );
      }
      return (
        (function (e, o) {
          function i() {
            this.constructor = e;
          }
          for (var n in o) t.call(o, n) && (e[n] = o[n]);
          (i.prototype = o.prototype),
            (e.prototype = new i()),
            (e.__super__ = o.prototype);
        })(o, e),
        (o.prototype.setup = function (e, t) {
          var o, i, n, s;
          for (
            n = [e],
              this.extend(this.config, t, !0),
              this.set_global_configuration(),
              this.normalize_network_configuration(),
              this.config.networks.facebook.enabled &&
                this.config.networks.facebook.load_sdk &&
                this.inject_facebook_sdk(),
              i = o = 0,
              s = n.length;
            s > o;
            i = ++o
          )
            n[i], this.setup_instance(e, i);
        }),
        (o.prototype.setup_instance = function (e, t) {
          var o, i, n, s, a, r, l, d;
          for (
            s = e,
              this.add_class(s, "sharer-" + t),
              this.inject_html(s),
              document.getElementById("flipbook-share-facebook").style.display =
                this.config.networks.facebook.display,
              document.getElementById("flipbook-share-twitter").style.display =
                this.config.networks.twitter.display,
              document.getElementById(
                "flipbook-share-pinterest"
              ).style.display = this.config.networks.pinterest.display,
              document.getElementById("flipbook-share-email").style.display =
                this.config.networks.email.display,
              s.getElementsByTagName("label")[0],
              i = s.getElementsByClassName("social")[0],
              l = s.getElementsByTagName("li"),
              this.add_class(i, "networks-" + this.config.enabled_networks),
              s.addEventListener(
                "click",
                (function (e) {
                  return function () {
                    return e.event_toggle(i);
                  };
                })(this)
              ),
              o = this,
              d = [],
              t = n = 0,
              a = l.length;
            a > n;
            t = ++n
          )
            (r = l[t]),
              d.push(
                r.addEventListener("click", function () {
                  return o.event_network(s, this), o.event_close(i);
                })
              );
          return d;
        }),
        (o.prototype.event_toggle = function (e) {
          return this.has_class(e, "active")
            ? this.event_close(e)
            : this.event_open(e);
        }),
        (o.prototype.event_open = function (e) {
          return (
            this.has_class(e, "load") && this.remove_class(e, "load"),
            this.add_class(e, "active")
          );
        }),
        (o.prototype.event_close = function (e) {
          return this.remove_class(e, "active");
        }),
        (o.prototype.event_network = function (e, t) {
          var o;
          return (
            (o = t.getAttribute("data-network")),
            this.hook("before", o, e),
            this["network_" + o](),
            this.hook("after", o, e)
          );
        }),
        (o.prototype.open = function () {
          return this.public("open");
        }),
        (o.prototype.close = function () {
          return this.public("close");
        }),
        (o.prototype.toggle = function () {
          return this.public("toggle");
        }),
        (o.prototype.public = function (e) {
          var t, o, i, n, s, a;
          for (
            a = [],
              i = o = 0,
              n = (s = document.querySelectorAll(this.element)).length;
            n > o;
            i = ++o
          )
            (t = s[i].getElementsByClassName("social")[0]),
              a.push(this["event_" + e](t));
          return a;
        }),
        (o.prototype.network_facebook = function () {
          return this.config.networks.facebook.load_sdk
            ? window.FB
              ? FB.ui({
                  method: "feed",
                  name: this.config.networks.facebook.title,
                  link: this.config.networks.facebook.url,
                  picture: this.config.networks.facebook.image,
                  caption: this.config.networks.facebook.caption,
                  description: this.config.networks.facebook.description,
                })
              : console.error("The Facebook JS SDK hasn't loaded yet.")
            : this.popup("https://www.facebook.com/sharer/sharer.php", {
                u: this.config.networks.facebook.url,
              });
        }),
        (o.prototype.network_twitter = function () {
          return this.popup("https://twitter.com/intent/tweet", {
            text: this.config.networks.twitter.description,
            url: this.config.networks.twitter.url,
          });
        }),
        (o.prototype.network_google_plus = function () {
          return this.popup("https://plus.google.com/share", {
            url: this.config.networks.google_plus.url,
          });
        }),
        (o.prototype.network_pinterest = function () {
          return this.popup("https://www.pinterest.com/pin/create/button", {
            url: this.config.networks.pinterest.url,
            media: this.config.networks.pinterest.image,
            description: this.config.networks.pinterest.description,
          });
        }),
        (o.prototype.network_email = function () {
          return this.popup("mailto:", {
            subject: this.config.networks.email.title,
            body:
              this.config.networks.email.description +
                "%0D%0A" +
                this.config.networks.email.url || this.config.url,
          });
        }),
        (o.prototype.inject_stylesheet = function (e) {
          var t;
          return this.el.head.querySelector('link[href="' + e + '"]')
            ? void 0
            : ((t = document.createElement("link")).setAttribute(
                "rel",
                "stylesheet"
              ),
              t.setAttribute("href", e),
              this.el.head.appendChild(t));
        }),
        (o.prototype.inject_html = function (e) {
          return (e.innerHTML =
            "<div class='social load " +
            this.config.ui.flyout +
            "'><ul><li id='flipbook-share-pinterest' data-network='pinterest'><i class='fab fa-pinterest-p skin-color'></i></li><li id='flipbook-share-twitter' data-network='twitter'><i class='fab fa-twitter skin-color'></i></li><li id='flipbook-share-facebook' data-network='facebook'><i class='fab fa-facebook-f skin-color'></i></li><li id='flipbook-share-email' data-network='email'><i class='fas fa-at skin-color'></i></li></ul></div>");
        }),
        (o.prototype.inject_facebook_sdk = function () {
          var e, t;
          return window.FB ||
            !this.config.networks.facebook.app_id ||
            this.el.body.querySelector("#fb-root")
            ? void 0
            : (((t = document.createElement("script")).text =
                "window.fbAsyncInit=function(){FB.init({appId:'" +
                this.config.networks.facebook.app_id +
                "',status:true,xfbml:true})};(function(e,t,n){var r,i=e.getElementsByTagName(t)[0];if(e.getElementById(n)){return}r=e.createElement(t);r.id=n;r.src='" +
                this.config.protocol +
                "connect.facebook.net/en_US/all.js';i.parentNode.insertBefore(r,i)})(document,'script','facebook-jssdk')"),
              ((e = document.createElement("div")).id = "fb-root"),
              this.el.body.appendChild(e),
              this.el.body.appendChild(t));
        }),
        (o.prototype.hook = function (e, t, o) {
          var i, n;
          "function" == typeof (i = this.config.networks[t][e]) &&
            void 0 !== (n = i.call(this.config.networks[t], o)) &&
            ((n = this.normalize_filter_config_updates(n)),
            this.extend(this.config.networks[t], n, !0),
            this.normalize_network_configuration());
        }),
        (o.prototype.default_title = function () {
          var e;
          return (e =
            document.querySelector('meta[property="og:title"]') ||
            document.querySelector('meta[name="twitter:title"]'))
            ? e.getAttribute("content")
            : (e = document.querySelector("title"))
            ? e.innerText
            : void 0;
        }),
        (o.prototype.default_image = function () {
          var e;
          return (e =
            document.querySelector('meta[property="og:image"]') ||
            document.querySelector('meta[name="twitter:image"]'))
            ? e.getAttribute("content")
            : void 0;
        }),
        (o.prototype.default_description = function () {
          var e;
          return (e =
            document.querySelector('meta[property="og:description"]') ||
            document.querySelector('meta[name="twitter:description"]') ||
            document.querySelector('meta[name="description"]'))
            ? e.getAttribute("content")
            : "";
        }),
        (o.prototype.set_global_configuration = function () {
          var e, t, o, i, n;
          for (t in ((n = []), (i = this.config.networks))) {
            for (o in i[t])
              null == this.config.networks[t][o] &&
                (this.config.networks[t][o] = this.config[o]);
            this.config.networks[t].enabled
              ? ((e = "block"), (this.config.enabled_networks += 1))
              : (e = "none"),
              n.push((this.config.networks[t].display = e));
          }
          return n;
        }),
        (o.prototype.normalize_network_configuration = function () {
          return (
            this.config.networks.facebook.app_id ||
              (this.config.networks.facebook.load_sdk = !1),
            this.is_encoded(this.config.networks.twitter.description) ||
              (this.config.networks.twitter.description = encodeURIComponent(
                this.config.networks.twitter.description
              )),
            "number" == typeof this.config.networks.facebook.app_id
              ? (this.config.networks.facebook.app_id =
                  this.config.networks.facebook.app_id.toString())
              : void 0
          );
        }),
        (o.prototype.normalize_filter_config_updates = function (e) {
          return (
            this.config.networks.facebook.app_id !== e.app_id &&
              (console.warn(
                "You are unable to change the Facebook app_id after the button has been initialized. Please update your Facebook filters accordingly."
              ),
              delete e.app_id),
            this.config.networks.facebook.load_sdk !== e.load_sdk &&
              (console.warn(
                "You are unable to change the Facebook load_sdk option after the button has been initialized. Please update your Facebook filters accordingly."
              ),
              delete e.app_id),
            e
          );
        }),
        o
      );
    })(e);
  });
